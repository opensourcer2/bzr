<refentry id="GladePalette">
<refmeta>
<refentrytitle role="top_of_page" id="GladePalette.top_of_page">GladePalette</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GLADEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GladePalette</refname>
<refpurpose>A widget to select a <link linkend="GladeWidgetClass"><type>GladeWidgetClass</type></link> for addition.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="GladePalette.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="GladePalettePrivate">GladePalettePrivate</link>;
                    <link linkend="GladePalette-struct">GladePalette</link>;
enum                <link linkend="GladeItemAppearance">GladeItemAppearance</link>;
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="glade-palette-new">glade_palette_new</link>                   (const <link linkend="GList">GList</link> *catalogs);
<link linkend="void">void</link>                <link linkend="glade-palette-deselect-current-item">glade_palette_deselect_current_item</link> (<link linkend="GladePalette">GladePalette</link> *palette,
                                                         <link linkend="gboolean">gboolean</link> sticky_aware);
<link linkend="GladeWidgetAdaptor">GladeWidgetAdaptor</link>* <link linkend="glade-palette-get-current-item">glade_palette_get_current_item</link>      (<link linkend="GladePalette">GladePalette</link> *palette);
<link linkend="GladeItemAppearance">GladeItemAppearance</link> <link linkend="glade-palette-get-item-appearance">glade_palette_get_item_appearance</link>   (<link linkend="GladePalette">GladePalette</link> *palette);
<link linkend="void">void</link>                <link linkend="glade-palette-set-item-appearance">glade_palette_set_item_appearance</link>   (<link linkend="GladePalette">GladePalette</link> *palette,
                                                         <link linkend="GladeItemAppearance">GladeItemAppearance</link> item_appearance);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-palette-get-use-small-item-icons">glade_palette_get_use_small_item_icons</link>
                                                        (<link linkend="GladePalette">GladePalette</link> *palette);
<link linkend="void">void</link>                <link linkend="glade-palette-set-use-small-item-icons">glade_palette_set_use_small_item_icons</link>
                                                        (<link linkend="GladePalette">GladePalette</link> *palette,
                                                         <link linkend="gboolean">gboolean</link> use_small_item_icons);
<link linkend="void">void</link>                <link linkend="glade-palette-set-show-selector-button">glade_palette_set_show_selector_button</link>
                                                        (<link linkend="GladePalette">GladePalette</link> *palette,
                                                         <link linkend="gboolean">gboolean</link> show_selector_button);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-palette-get-show-selector-button">glade_palette_get_show_selector_button</link>
                                                        (<link linkend="GladePalette">GladePalette</link> *palette);
</synopsis>
</refsynopsisdiv>

<refsect1 id="GladePalette.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----<link linkend="GtkWidget">GtkWidget</link>
                     +----<link linkend="GtkContainer">GtkContainer</link>
                           +----<link linkend="GtkBox">GtkBox</link>
                                 +----<link linkend="GtkVBox">GtkVBox</link>
                                       +----GladePalette
</synopsis>

</refsect1>



<refsect1 id="GladePalette.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GladePalette implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link> and  <link linkend="GtkBuildable">GtkBuildable</link>.</para>

</refsect1>


<refsect1 id="GladePalette.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="GladePalette--catalogs">catalogs</link>&quot;                 <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only
  &quot;<link linkend="GladePalette--current-item">current-item</link>&quot;             <link linkend="gpointer">gpointer</link>              : Read
  &quot;<link linkend="GladePalette--item-appearance">item-appearance</link>&quot;          <link linkend="GladeItemAppearance">GladeItemAppearance</link>   : Read / Write
  &quot;<link linkend="GladePalette--show-selector-button">show-selector-button</link>&quot;     <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GladePalette--use-small-item-icons">use-small-item-icons</link>&quot;     <link linkend="gboolean">gboolean</link>              : Read / Write
</synopsis>
</refsect1>

<refsect1 id="GladePalette.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="GladePalette-toggled">toggled</link>&quot;                                        : Run Last
</synopsis>
</refsect1>


<refsect1 id="GladePalette.description" role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="GladePalette"><type>GladePalette</type></link> is responsible for displaying the list of available
<link linkend="GladeWidgetClass"><type>GladeWidgetClass</type></link> types and publishing the currently selected class
to the Glade core.</para>
<para>

</para>
</refsect1>

<refsect1 id="GladePalette.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GladePalettePrivate" role="struct">
<title>GladePalettePrivate</title>
<indexterm zone="GladePalettePrivate"><primary>GladePalettePrivate</primary></indexterm><programlisting>typedef struct _GladePalettePrivate GladePalettePrivate;</programlisting>
<para>

</para></refsect2>
<refsect2 id="GladePalette-struct" role="struct">
<title>GladePalette</title>
<indexterm zone="GladePalette-struct"><primary>GladePalette</primary></indexterm><programlisting>typedef struct _GladePalette GladePalette;</programlisting>
<para>

</para></refsect2>
<refsect2 id="GladeItemAppearance" role="enum">
<title>enum GladeItemAppearance</title>
<indexterm zone="GladeItemAppearance"><primary>GladeItemAppearance</primary></indexterm><programlisting>typedef enum
{
	GLADE_ITEM_ICON_AND_LABEL,
	GLADE_ITEM_ICON_ONLY,
	GLADE_ITEM_LABEL_ONLY
} GladeItemAppearance;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="glade-palette-new" role="function">
<title>glade_palette_new ()</title>
<indexterm zone="glade-palette-new"><primary>glade_palette_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          glade_palette_new                   (const <link linkend="GList">GList</link> *catalogs);</programlisting>
<para>
Creates a new <link linkend="GladePalette"><type>GladePalette</type></link> widget</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>catalogs</parameter>&nbsp;:</term>
<listitem><simpara> the widget catalogs for the palette.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GladePalette"><type>GladePalette</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-palette-deselect-current-item" role="function">
<title>glade_palette_deselect_current_item ()</title>
<indexterm zone="glade-palette-deselect-current-item"><primary>glade_palette_deselect_current_item</primary></indexterm><programlisting><link linkend="void">void</link>                glade_palette_deselect_current_item (<link linkend="GladePalette">GladePalette</link> *palette,
                                                         <link linkend="gboolean">gboolean</link> sticky_aware);</programlisting>
<para>
Deselects the currently selected item</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>palette</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePalette"><type>GladePalette</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sticky_aware</parameter>&nbsp;:</term>
<listitem><simpara> whether to consider sticky selection mode
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-palette-get-current-item" role="function">
<title>glade_palette_get_current_item ()</title>
<indexterm zone="glade-palette-get-current-item"><primary>glade_palette_get_current_item</primary></indexterm><programlisting><link linkend="GladeWidgetAdaptor">GladeWidgetAdaptor</link>* glade_palette_get_current_item      (<link linkend="GladePalette">GladePalette</link> *palette);</programlisting>
<para>
Gets the <link linkend="GladeWidgetAdaptor"><type>GladeWidgetAdaptor</type></link> of the currently selected item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>palette</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePalette"><type>GladePalette</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GladeWidgetAdaptor"><type>GladeWidgetAdaptor</type></link> of currently selected item, or NULL
         if no item is selected.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-palette-get-item-appearance" role="function">
<title>glade_palette_get_item_appearance ()</title>
<indexterm zone="glade-palette-get-item-appearance"><primary>glade_palette_get_item_appearance</primary></indexterm><programlisting><link linkend="GladeItemAppearance">GladeItemAppearance</link> glade_palette_get_item_appearance   (<link linkend="GladePalette">GladePalette</link> *palette);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>palette</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePalette"><type>GladePalette</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The appearance of the palette items
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-palette-set-item-appearance" role="function">
<title>glade_palette_set_item_appearance ()</title>
<indexterm zone="glade-palette-set-item-appearance"><primary>glade_palette_set_item_appearance</primary></indexterm><programlisting><link linkend="void">void</link>                glade_palette_set_item_appearance   (<link linkend="GladePalette">GladePalette</link> *palette,
                                                         <link linkend="GladeItemAppearance">GladeItemAppearance</link> item_appearance);</programlisting>
<para>
Sets the appearance of the palette items.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>palette</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePalette"><type>GladePalette</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item_appearance</parameter>&nbsp;:</term>
<listitem><simpara> the item appearance
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-palette-get-use-small-item-icons" role="function">
<title>glade_palette_get_use_small_item_icons ()</title>
<indexterm zone="glade-palette-get-use-small-item-icons"><primary>glade_palette_get_use_small_item_icons</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_palette_get_use_small_item_icons
                                                        (<link linkend="GladePalette">GladePalette</link> *palette);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>palette</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePalette"><type>GladePalette</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Whether small item icons are used
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-palette-set-use-small-item-icons" role="function">
<title>glade_palette_set_use_small_item_icons ()</title>
<indexterm zone="glade-palette-set-use-small-item-icons"><primary>glade_palette_set_use_small_item_icons</primary></indexterm><programlisting><link linkend="void">void</link>                glade_palette_set_use_small_item_icons
                                                        (<link linkend="GladePalette">GladePalette</link> *palette,
                                                         <link linkend="gboolean">gboolean</link> use_small_item_icons);</programlisting>
<para>
Sets whether to use small item icons.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>palette</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePalette"><type>GladePalette</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_small_item_icons</parameter>&nbsp;:</term>
<listitem><simpara> Whether to use small item icons
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-palette-set-show-selector-button" role="function">
<title>glade_palette_set_show_selector_button ()</title>
<indexterm zone="glade-palette-set-show-selector-button"><primary>glade_palette_set_show_selector_button</primary></indexterm><programlisting><link linkend="void">void</link>                glade_palette_set_show_selector_button
                                                        (<link linkend="GladePalette">GladePalette</link> *palette,
                                                         <link linkend="gboolean">gboolean</link> show_selector_button);</programlisting>
<para>
Sets whether to show the internal widget selector button</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>palette</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePalette"><type>GladePalette</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>show_selector_button</parameter>&nbsp;:</term>
<listitem><simpara> whether to show selector button
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-palette-get-show-selector-button" role="function">
<title>glade_palette_get_show_selector_button ()</title>
<indexterm zone="glade-palette-get-show-selector-button"><primary>glade_palette_get_show_selector_button</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_palette_get_show_selector_button
                                                        (<link linkend="GladePalette">GladePalette</link> *palette);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>palette</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePalette"><type>GladePalette</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Whether the selector button is visible
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="GladePalette.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GladePalette--catalogs"><title>The <literal>&quot;catalogs&quot;</literal> property</title>
<indexterm zone="GladePalette--catalogs"><primary>GladePalette:catalogs</primary></indexterm><programlisting>  &quot;catalogs&quot;                 <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only</programlisting>
<para>The widget catalogs for the palette.</para></refsect2>
<refsect2 id="GladePalette--current-item"><title>The <literal>&quot;current-item&quot;</literal> property</title>
<indexterm zone="GladePalette--current-item"><primary>GladePalette:current-item</primary></indexterm><programlisting>  &quot;current-item&quot;             <link linkend="gpointer">gpointer</link>              : Read</programlisting>
<para>The GladeWidgetAdaptor of the currently selected item.</para></refsect2>
<refsect2 id="GladePalette--item-appearance"><title>The <literal>&quot;item-appearance&quot;</literal> property</title>
<indexterm zone="GladePalette--item-appearance"><primary>GladePalette:item-appearance</primary></indexterm><programlisting>  &quot;item-appearance&quot;          <link linkend="GladeItemAppearance">GladeItemAppearance</link>   : Read / Write</programlisting>
<para>The appearance of the palette items.</para><para>Default value: GLADE_ITEM_ICON_ONLY</para>
</refsect2>
<refsect2 id="GladePalette--show-selector-button"><title>The <literal>&quot;show-selector-button&quot;</literal> property</title>
<indexterm zone="GladePalette--show-selector-button"><primary>GladePalette:show-selector-button</primary></indexterm><programlisting>  &quot;show-selector-button&quot;     <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>Whether to show the internal selector button.</para><para>Default value: TRUE</para>
</refsect2>
<refsect2 id="GladePalette--use-small-item-icons"><title>The <literal>&quot;use-small-item-icons&quot;</literal> property</title>
<indexterm zone="GladePalette--use-small-item-icons"><primary>GladePalette:use-small-item-icons</primary></indexterm><programlisting>  &quot;use-small-item-icons&quot;     <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>Whether to use small icons to represent items.</para><para>Default value: FALSE</para>
</refsect2>

</refsect1>

<refsect1 id="GladePalette.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GladePalette-toggled"><title>The <literal>&quot;toggled&quot;</literal> signal</title>
<indexterm zone="GladePalette-toggled"><primary>GladePalette::toggled</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladePalette">GladePalette</link> *gladepalette,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladepalette</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
