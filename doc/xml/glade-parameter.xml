<refentry id="gladeui-glade-parameter">
<refmeta>
<refentrytitle role="top_of_page" id="gladeui-glade-parameter.top_of_page">Glade Parameter</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GLADEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Glade Parameter</refname>
<refpurpose>Parameters set in the catalog retrievable from the plugin.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="gladeui-glade-parameter.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="GladeParameter">GladeParameter</link>;
<link linkend="GladeParameter">GladeParameter</link>*     <link linkend="glade-parameter-new">glade_parameter_new</link>                 (void);
<link linkend="GladeParameter">GladeParameter</link>*     <link linkend="glade-parameter-clone">glade_parameter_clone</link>               (<link linkend="GladeParameter">GladeParameter</link> *parameter);
<link linkend="void">void</link>                <link linkend="glade-parameter-free">glade_parameter_free</link>                (<link linkend="GladeParameter">GladeParameter</link> *parameter);
<link linkend="void">void</link>                <link linkend="glade-parameter-get-float">glade_parameter_get_float</link>           (<link linkend="GList">GList</link> *parameters,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gfloat">gfloat</link> *value);
<link linkend="void">void</link>                <link linkend="glade-parameter-get-integer">glade_parameter_get_integer</link>         (<link linkend="GList">GList</link> *parameters,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gint">gint</link> *value);
<link linkend="void">void</link>                <link linkend="glade-parameter-get-boolean">glade_parameter_get_boolean</link>         (<link linkend="GList">GList</link> *parameters,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> *value);
<link linkend="void">void</link>                <link linkend="glade-parameter-get-string">glade_parameter_get_string</link>          (<link linkend="GList">GList</link> *parameters,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gchar">gchar</link> **value);
<link linkend="GList">GList</link>*              <link linkend="glade-parameter-list-new-from-node">glade_parameter_list_new_from_node</link>  (<link linkend="GList">GList</link> *list,
                                                         <link linkend="GladeXmlNode">GladeXmlNode</link> *node);
</synopsis>
</refsynopsisdiv>









<refsect1 id="gladeui-glade-parameter.description" role="desc">
<title role="desc.title">Description</title>
<para>
Parameters can be set in your catalog file that may determine how
your plugin will treat certain widget classes.</para>
<para>

</para>
</refsect1>

<refsect1 id="gladeui-glade-parameter.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GladeParameter" role="struct">
<title>GladeParameter</title>
<indexterm zone="GladeParameter"><primary>GladeParameter</primary></indexterm><programlisting>typedef struct {
	gchar *key;   /* The name of the parameter */
	gchar *value; /* The textual representation of the parameter */
} GladeParameter;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="glade-parameter-new" role="function">
<title>glade_parameter_new ()</title>
<indexterm zone="glade-parameter-new"><primary>glade_parameter_new</primary></indexterm><programlisting><link linkend="GladeParameter">GladeParameter</link>*     glade_parameter_new                 (void);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GladeParameter"><type>GladeParameter</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-parameter-clone" role="function">
<title>glade_parameter_clone ()</title>
<indexterm zone="glade-parameter-clone"><primary>glade_parameter_clone</primary></indexterm><programlisting><link linkend="GladeParameter">GladeParameter</link>*     glade_parameter_clone               (<link linkend="GladeParameter">GladeParameter</link> *parameter);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>parameter</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeParameter"><type>GladeParameter</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GladeParameter"><type>GladeParameter</type></link> cloned from <parameter>parameter</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-parameter-free" role="function">
<title>glade_parameter_free ()</title>
<indexterm zone="glade-parameter-free"><primary>glade_parameter_free</primary></indexterm><programlisting><link linkend="void">void</link>                glade_parameter_free                (<link linkend="GladeParameter">GladeParameter</link> *parameter);</programlisting>
<para>
Frees <parameter>parameter</parameter> and its associated memory.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>parameter</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeParameter"><type>GladeParameter</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-parameter-get-float" role="function">
<title>glade_parameter_get_float ()</title>
<indexterm zone="glade-parameter-get-float"><primary>glade_parameter_get_float</primary></indexterm><programlisting><link linkend="void">void</link>                glade_parameter_get_float           (<link linkend="GList">GList</link> *parameters,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gfloat">gfloat</link> *value);</programlisting>
<para>
Searches through <parameter>parameters</parameter> looking for a <link linkend="GladeParameter"><type>GladeParameter</type></link> named <parameter>key</parameter>. If
found, it stores a <link linkend="gfloat"><type>gfloat</type></link> representation of its value into <parameter>value</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>parameters</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GList"><type>GList</type></link> of <link linkend="GladeParameters"><type>GladeParameters</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> a string containing the parameter name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="gfloat"><type>gfloat</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-parameter-get-integer" role="function">
<title>glade_parameter_get_integer ()</title>
<indexterm zone="glade-parameter-get-integer"><primary>glade_parameter_get_integer</primary></indexterm><programlisting><link linkend="void">void</link>                glade_parameter_get_integer         (<link linkend="GList">GList</link> *parameters,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gint">gint</link> *value);</programlisting>
<para>
Searches through <parameter>parameters</parameter> looking for a <link linkend="GladeParameter"><type>GladeParameter</type></link> named <parameter>key</parameter>. If
found, it stores a <link linkend="gint"><type>gint</type></link> representation of its value into <parameter>value</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>parameters</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GList"><type>GList</type></link> of <link linkend="GladeParameters"><type>GladeParameters</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> a string containing the parameter name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="gint"><type>gint</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-parameter-get-boolean" role="function">
<title>glade_parameter_get_boolean ()</title>
<indexterm zone="glade-parameter-get-boolean"><primary>glade_parameter_get_boolean</primary></indexterm><programlisting><link linkend="void">void</link>                glade_parameter_get_boolean         (<link linkend="GList">GList</link> *parameters,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gboolean">gboolean</link> *value);</programlisting>
<para>
Searches through <parameter>parameters</parameter> looking for a <link linkend="GladeParameter"><type>GladeParameter</type></link> named <parameter>key</parameter>. If
found, it stores a <link linkend="gboolean"><type>gboolean</type></link> representation of its value into <parameter>value</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>parameters</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GList"><type>GList</type></link> of <link linkend="GladeParameters"><type>GladeParameters</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> a string containing the parameter name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="gboolean"><type>gboolean</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-parameter-get-string" role="function">
<title>glade_parameter_get_string ()</title>
<indexterm zone="glade-parameter-get-string"><primary>glade_parameter_get_string</primary></indexterm><programlisting><link linkend="void">void</link>                glade_parameter_get_string          (<link linkend="GList">GList</link> *parameters,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="gchar">gchar</link> **value);</programlisting>
<para>
Searches through <parameter>parameters</parameter> looking for a <link linkend="GladeParameter"><type>GladeParameter</type></link> named <parameter>key</parameter>. If
found, it stores a newly copied string representation of its value into 
<parameter>value</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>parameters</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GList"><type>GList</type></link> of <link linkend="GladeParameters"><type>GladeParameters</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> a string containing the parameter name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to an string
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-parameter-list-new-from-node" role="function">
<title>glade_parameter_list_new_from_node ()</title>
<indexterm zone="glade-parameter-list-new-from-node"><primary>glade_parameter_list_new_from_node</primary></indexterm><programlisting><link linkend="GList">GList</link>*              glade_parameter_list_new_from_node  (<link linkend="GList">GList</link> *list,
                                                         <link linkend="GladeXmlNode">GladeXmlNode</link> *node);</programlisting>
<para>
TODO: write me</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GList"><type>GList</type></link> node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeXmlNode"><type>GladeXmlNode</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
