<refentry id="gladeui-glade-property">
<refmeta>
<refentrytitle role="top_of_page" id="gladeui-glade-property.top_of_page">GladeProperty</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GLADEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GladeProperty</refname>
<refpurpose>An interface to properties on the <link linkend="GladeWidget"><type>GladeWidget</type></link>.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="gladeui-glade-property.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="GladeProperty"/>
<synopsis>
#define             <link linkend="GLADE-PROPERTY-KLASS:CAPS">GLADE_PROPERTY_KLASS</link>                (klass)
#define             <link linkend="GLADE-IS-PROPERTY-KLASS:CAPS">GLADE_IS_PROPERTY_KLASS</link>             (klass)
#define             <link linkend="GLADE-PROPERTY-GET-KLASS:CAPS">GLADE_PROPERTY_GET_KLASS</link>            (o)
                    <link linkend="GladePropertyKlass">GladePropertyKlass</link>;
struct              <link linkend="GladeProperty-struct">GladeProperty</link>;
<link linkend="GladeProperty">GladeProperty</link>*      <link linkend="glade-property-new">glade_property_new</link>                  (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="GladeWidget">GladeWidget</link> *widget,
                                                         <link linkend="GValue">GValue</link> *value);
<link linkend="GladeProperty">GladeProperty</link>*      <link linkend="glade-property-dup">glade_property_dup</link>                  (<link linkend="GladeProperty">GladeProperty</link> *template_prop,
                                                         <link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="void">void</link>                <link linkend="glade-property-reset">glade_property_reset</link>                (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>                <link linkend="glade-property-original-reset">glade_property_original_reset</link>       (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-default">glade_property_default</link>              (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-original-default">glade_property_original_default</link>     (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-equals-value">glade_property_equals_value</link>         (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         const <link linkend="GValue">GValue</link> *value);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-equals">glade_property_equals</link>               (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         ...);
<link linkend="void">void</link>                <link linkend="glade-property-set-value">glade_property_set_value</link>            (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         const <link linkend="GValue">GValue</link> *value);
<link linkend="void">void</link>                <link linkend="glade-property-set-va-list">glade_property_set_va_list</link>          (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="va-list">va_list</link> vl);
<link linkend="void">void</link>                <link linkend="glade-property-set">glade_property_set</link>                  (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         ...);
<link linkend="void">void</link>                <link linkend="glade-property-get-value">glade_property_get_value</link>            (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GValue">GValue</link> *value);
<link linkend="void">void</link>                <link linkend="glade-property-get-default">glade_property_get_default</link>          (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GValue">GValue</link> *value);
<link linkend="void">void</link>                <link linkend="glade-property-get-va-list">glade_property_get_va_list</link>          (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="va-list">va_list</link> vl);
<link linkend="void">void</link>                <link linkend="glade-property-get">glade_property_get</link>                  (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         ...);
<link linkend="void">void</link>                <link linkend="glade-property-add-object">glade_property_add_object</link>           (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GObject">GObject</link> *object);
<link linkend="void">void</link>                <link linkend="glade-property-remove-object">glade_property_remove_object</link>        (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GObject">GObject</link> *object);
<link linkend="void">void</link>                <link linkend="glade-property-sync">glade_property_sync</link>                 (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>                <link linkend="glade-property-load">glade_property_load</link>                 (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="GValue">GValue</link>*             <link linkend="glade-property-read">glade_property_read</link>                 (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GladePropertyClass">GladePropertyClass</link> *pclass,
                                                         <link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="gpointer">gpointer</link> info,
                                                         <link linkend="gboolean">gboolean</link> free_value);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-write">glade_property_write</link>                (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GladeInterface">GladeInterface</link> *interface,
                                                         <link linkend="GArray">GArray</link> *props);
const <link linkend="gchar">gchar</link>*        <link linkend="glade-property-get-tooltip">glade_property_get_tooltip</link>          (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>                <link linkend="glade-property-set-sensitive">glade_property_set_sensitive</link>        (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="gboolean">gboolean</link> sensitive,
                                                         const <link linkend="gchar">gchar</link> *reason);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-get-sensitive">glade_property_get_sensitive</link>        (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>                <link linkend="glade-property-set-save-always">glade_property_set_save_always</link>      (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="gboolean">gboolean</link> setting);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-get-save-always">glade_property_get_save_always</link>      (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>                <link linkend="glade-property-set-enabled">glade_property_set_enabled</link>          (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="gboolean">gboolean</link> enabled);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-get-enabled">glade_property_get_enabled</link>          (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>                <link linkend="glade-property-i18n-set-comment">glade_property_i18n_set_comment</link>     (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         const <link linkend="gchar">gchar</link> *str);
const <link linkend="gchar">gchar</link>*        <link linkend="glade-property-i18n-get-comment">glade_property_i18n_get_comment</link>     (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>                <link linkend="glade-property-i18n-set-translatable">glade_property_i18n_set_translatable</link>
                                                        (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="gboolean">gboolean</link> translatable);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-i18n-get-translatable">glade_property_i18n_get_translatable</link>
                                                        (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>                <link linkend="glade-property-i18n-set-has-context">glade_property_i18n_set_has_context</link> (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="gboolean">gboolean</link> has_context);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-i18n-get-has-context">glade_property_i18n_get_has_context</link> (<link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>                <link linkend="glade-property-push-superuser">glade_property_push_superuser</link>       (void);
<link linkend="void">void</link>                <link linkend="glade-property-pop-superuser">glade_property_pop_superuser</link>        (void);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-superuser">glade_property_superuser</link>            (void);
</synopsis>
</refsynopsisdiv>

<refsect1 id="gladeui-glade-property.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----GladeProperty
</synopsis>

</refsect1>





<refsect1 id="gladeui-glade-property.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="GladeProperty--enabled">enabled</link>&quot;                  <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GladeProperty--i18n-comment">i18n-comment</link>&quot;             <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="GladeProperty--i18n-has-context">i18n-has-context</link>&quot;         <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GladeProperty--i18n-translatable">i18n-translatable</link>&quot;        <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GladeProperty--sensitive">sensitive</link>&quot;                <link linkend="gboolean">gboolean</link>              : Read / Write
</synopsis>
</refsect1>

<refsect1 id="gladeui-glade-property.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="GladeProperty-tooltip-changed">tooltip-changed</link>&quot;                                : Run Last
  &quot;<link linkend="GladeProperty-value-changed">value-changed</link>&quot;                                  : Run Last
</synopsis>
</refsect1>


<refsect1 id="gladeui-glade-property.description" role="desc">
<title role="desc.title">Description</title>
<para>
Every object property of every <link linkend="GladeWidget"><type>GladeWidget</type></link> in every <link linkend="GladeProject"><type>GladeProject</type></link> has
a <link linkend="GladeProperty"><type>GladeProperty</type></link> to interface with, <link linkend="GladeProperty"><type>GladeProperty</type></link> provides a means
to handle properties in the runtime environment.
</para>
<para>
A <link linkend="GladeProperty"><type>GladeProperty</type></link> can be seen as an instance of a <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>, 
the <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link> describes how a <link linkend="GladeProperty"><type>GladeProperty</type></link> will function.</para>
<para>

</para>
</refsect1>

<refsect1 id="gladeui-glade-property.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GLADE-PROPERTY-KLASS:CAPS" role="macro">
<title>GLADE_PROPERTY_KLASS()</title>
<indexterm zone="GLADE-PROPERTY-KLASS:CAPS"><primary>GLADE_PROPERTY_KLASS</primary></indexterm><programlisting>#define GLADE_PROPERTY_KLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), GLADE_TYPE_PROPERTY, GladePropertyKlass))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GLADE-IS-PROPERTY-KLASS:CAPS" role="macro">
<title>GLADE_IS_PROPERTY_KLASS()</title>
<indexterm zone="GLADE-IS-PROPERTY-KLASS:CAPS"><primary>GLADE_IS_PROPERTY_KLASS</primary></indexterm><programlisting>#define GLADE_IS_PROPERTY_KLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GLADE_TYPE_PROPERTY))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GLADE-PROPERTY-GET-KLASS:CAPS" role="macro">
<title>GLADE_PROPERTY_GET_KLASS()</title>
<indexterm zone="GLADE-PROPERTY-GET-KLASS:CAPS"><primary>GLADE_PROPERTY_GET_KLASS</primary></indexterm><programlisting>#define GLADE_PROPERTY_GET_KLASS(o)    (G_TYPE_INSTANCE_GET_CLASS ((o), GLADE_PROPERTY, GladePropertyKlass))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>o</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GladePropertyKlass" role="struct">
<title>GladePropertyKlass</title>
<indexterm zone="GladePropertyKlass"><primary>GladePropertyKlass</primary></indexterm><programlisting>typedef struct {
	GObjectClass  parent_class;

	/* Class methods */
	GladeProperty *         (* dup)                   (GladeProperty *, GladeWidget *);
	gboolean                (* equals_value)          (GladeProperty *, const GValue *);
	void                    (* set_value)             (GladeProperty *, const GValue *);
	void                    (* get_value)             (GladeProperty *, GValue *);
	void                    (* get_default)           (GladeProperty *, GValue *);
	void                    (* sync)                  (GladeProperty *);
	void                    (* load)                  (GladeProperty *);
	gboolean                (* write)                 (GladeProperty *, GladeInterface *, GArray *);
	G_CONST_RETURN gchar *  (* get_tooltip)           (GladeProperty *);

	/* Signals */
	void             (* value_changed)         (GladeProperty *, GValue *, GValue *);
	void             (* tooltip_changed)       (GladeProperty *, const gchar *);
} GladePropertyKlass;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="GladeProperty-struct" role="struct">
<title>struct GladeProperty</title>
<indexterm zone="GladeProperty-struct"><primary>GladeProperty</primary></indexterm><programlisting>struct GladeProperty;</programlisting>
<para>

</para></refsect2>
<refsect2 id="glade-property-new" role="function">
<title>glade_property_new ()</title>
<indexterm zone="glade-property-new"><primary>glade_property_new</primary></indexterm><programlisting><link linkend="GladeProperty">GladeProperty</link>*      glade_property_new                  (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="GladeWidget">GladeWidget</link> *widget,
                                                         <link linkend="GValue">GValue</link> *value);</programlisting>
<para>
Creates a <link linkend="GladeProperty"><type>GladeProperty</type></link> of type <parameter>klass</parameter> for <parameter>widget</parameter> with <parameter>value</parameter>; if
<parameter>value</parameter> is <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the introspected default value for that property
will be used.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link> defining this property
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GladeWidget"><type>GladeWidget</type></link> this property is created for
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> The initial <link linkend="GValue"><type>GValue</type></link> of the property or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
        (the <link linkend="GladeProperty"><type>GladeProperty</type></link> will assume ownership of <parameter>value</parameter>)
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The newly created <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-dup" role="function">
<title>glade_property_dup ()</title>
<indexterm zone="glade-property-dup"><primary>glade_property_dup</primary></indexterm><programlisting><link linkend="GladeProperty">GladeProperty</link>*      glade_property_dup                  (<link linkend="GladeProperty">GladeProperty</link> *template_prop,
                                                         <link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>template_prop</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly duplicated property based on the new widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-reset" role="function">
<title>glade_property_reset ()</title>
<indexterm zone="glade-property-reset"><primary>glade_property_reset</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_reset                (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
Resets this property to its default value</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-original-reset" role="function">
<title>glade_property_original_reset ()</title>
<indexterm zone="glade-property-original-reset"><primary>glade_property_original_reset</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_original_reset       (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
Resets this property to its original default value</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-default" role="function">
<title>glade_property_default ()</title>
<indexterm zone="glade-property-default"><primary>glade_property_default</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_default              (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Whether this property is at its default value
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-original-default" role="function">
<title>glade_property_original_default ()</title>
<indexterm zone="glade-property-original-default"><primary>glade_property_original_default</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_original_default     (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Whether this property is at its original default value
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-equals-value" role="function">
<title>glade_property_equals_value ()</title>
<indexterm zone="glade-property-equals-value"><primary>glade_property_equals_value</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_equals_value         (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         const <link linkend="GValue">GValue</link> *value);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GValue"><type>GValue</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Whether this property is equal to the value provided
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-equals" role="function">
<title>glade_property_equals ()</title>
<indexterm zone="glade-property-equals"><primary>glade_property_equals</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_equals               (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         ...);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> a provided property value
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Whether this property is equal to the value provided
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-set-value" role="function">
<title>glade_property_set_value ()</title>
<indexterm zone="glade-property-set-value"><primary>glade_property_set_value</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_set_value            (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         const <link linkend="GValue">GValue</link> *value);</programlisting>
<para>
Sets the property's value</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GValue"><type>GValue</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-set-va-list" role="function">
<title>glade_property_set_va_list ()</title>
<indexterm zone="glade-property-set-va-list"><primary>glade_property_set_va_list</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_set_va_list          (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="va-list">va_list</link> vl);</programlisting>
<para>
Sets the property's value</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vl</parameter>&nbsp;:</term>
<listitem><simpara> a va_list with value to set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-set" role="function">
<title>glade_property_set ()</title>
<indexterm zone="glade-property-set"><primary>glade_property_set</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_set                  (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         ...);</programlisting>
<para>
Sets the property's value (in a convenient way)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> the value to set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-get-value" role="function">
<title>glade_property_get_value ()</title>
<indexterm zone="glade-property-get-value"><primary>glade_property_get_value</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_get_value            (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GValue">GValue</link> *value);</programlisting>
<para>
Retrieve the property value</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GValue"><type>GValue</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-get-default" role="function">
<title>glade_property_get_default ()</title>
<indexterm zone="glade-property-get-default"><primary>glade_property_get_default</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_get_default          (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GValue">GValue</link> *value);</programlisting>
<para>
Retrieve the default property value</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GValue"><type>GValue</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-get-va-list" role="function">
<title>glade_property_get_va_list ()</title>
<indexterm zone="glade-property-get-va-list"><primary>glade_property_get_va_list</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_get_va_list          (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="va-list">va_list</link> vl);</programlisting>
<para>
Retrieve the property value</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vl</parameter>&nbsp;:</term>
<listitem><simpara> a va_list
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-get" role="function">
<title>glade_property_get ()</title>
<indexterm zone="glade-property-get"><primary>glade_property_get</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_get                  (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         ...);</programlisting>
<para>
Retrieve the property value</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> An address to store the value
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-add-object" role="function">
<title>glade_property_add_object ()</title>
<indexterm zone="glade-property-add-object"><primary>glade_property_add_object</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_add_object           (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GObject">GObject</link> *object);</programlisting>
<para>
Adds <parameter>object</parameter> to the object list in <parameter>property</parameter>.
</para>
<para>
Note: This function expects <parameter>property</parameter> to be a <link linkend="GladeParamSpecObjects"><type>GladeParamSpecObjects</type></link>
or <link linkend="GParamSpecObject"><type>GParamSpecObject</type></link> type property.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GObject"><type>GObject</type></link> to add
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-remove-object" role="function">
<title>glade_property_remove_object ()</title>
<indexterm zone="glade-property-remove-object"><primary>glade_property_remove_object</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_remove_object        (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GObject">GObject</link> *object);</programlisting>
<para>
Removes <parameter>object</parameter> from the object list in <parameter>property</parameter>.
</para>
<para>
Note: This function expects <parameter>property</parameter> to be a <link linkend="GladeParamSpecObjects"><type>GladeParamSpecObjects</type></link>
or <link linkend="GParamSpecObject"><type>GParamSpecObject</type></link> type property.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GObject"><type>GObject</type></link> to add
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-sync" role="function">
<title>glade_property_sync ()</title>
<indexterm zone="glade-property-sync"><primary>glade_property_sync</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_sync                 (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
Synchronize the object with this property</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-load" role="function">
<title>glade_property_load ()</title>
<indexterm zone="glade-property-load"><primary>glade_property_load</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_load                 (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
Loads the value of <parameter>property</parameter> from the coresponding object instance</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-read" role="function">
<title>glade_property_read ()</title>
<indexterm zone="glade-property-read"><primary>glade_property_read</primary></indexterm><programlisting><link linkend="GValue">GValue</link>*             glade_property_read                 (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GladePropertyClass">GladePropertyClass</link> *pclass,
                                                         <link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="gpointer">gpointer</link> info,
                                                         <link linkend="gboolean">gboolean</link> free_value);</programlisting>
<para>
Read the value and any attributes for <parameter>property</parameter> from <parameter>info</parameter>, assumes
<parameter>property</parameter> is being loaded for <parameter>project</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link> or <link linkend="NULL:CAPS"><type>NULL</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pclass</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidgetInfo"><type>GladeWidgetInfo</type></link> struct or a <link linkend="GladeChildInfo"><type>GladeChildInfo</type></link> struct if
       a packing property is passed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>free_value</parameter>&nbsp;:</term>
<listitem><simpara> Whether the return value should be freed after applying
             it to the property or if it should be returned in tact.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The newly created <link linkend="GValue"><type>GValue</type></link> if successfull (and if <parameter>free_value</parameter> == FALSE)

Note that object values will only be resolved after the project is
completely loaded
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-write" role="function">
<title>glade_property_write ()</title>
<indexterm zone="glade-property-write"><primary>glade_property_write</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_write                (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="GladeInterface">GladeInterface</link> *interface,
                                                         <link linkend="GArray">GArray</link> *props);</programlisting>
<para>
Write this property to the GladeInterface metadata</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>interface</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeInterface"><type>GladeInterface</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>props</parameter>&nbsp;:</term>
<listitem><simpara> a GArray of <link linkend="GladePropInfo"><type>GladePropInfo</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-get-tooltip" role="function">
<title>glade_property_get_tooltip ()</title>
<indexterm zone="glade-property-get-tooltip"><primary>glade_property_get_tooltip</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        glade_property_get_tooltip          (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The appropriate tooltip for the editor
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-set-sensitive" role="function">
<title>glade_property_set_sensitive ()</title>
<indexterm zone="glade-property-set-sensitive"><primary>glade_property_set_sensitive</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_set_sensitive        (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="gboolean">gboolean</link> sensitive,
                                                         const <link linkend="gchar">gchar</link> *reason);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sensitive</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reason</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-get-sensitive" role="function">
<title>glade_property_get_sensitive ()</title>
<indexterm zone="glade-property-get-sensitive"><primary>glade_property_get_sensitive</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_get_sensitive        (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-set-save-always" role="function">
<title>glade_property_set_save_always ()</title>
<indexterm zone="glade-property-set-save-always"><primary>glade_property_set_save_always</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_set_save_always      (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="gboolean">gboolean</link> setting);</programlisting>
<para>
Sets whether this property should be special cased
to always be saved regardless of its default value.
(used for some special cases like properties
that are assigned initial values in composite widgets
or derived widget code).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>setting</parameter>&nbsp;:</term>
<listitem><simpara> the value to set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-get-save-always" role="function">
<title>glade_property_get_save_always ()</title>
<indexterm zone="glade-property-get-save-always"><primary>glade_property_get_save_always</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_get_save_always      (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>whether this property is special cased
to always be saved regardless of its default value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-set-enabled" role="function">
<title>glade_property_set_enabled ()</title>
<indexterm zone="glade-property-set-enabled"><primary>glade_property_set_enabled</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_set_enabled          (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="gboolean">gboolean</link> enabled);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enabled</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-get-enabled" role="function">
<title>glade_property_get_enabled ()</title>
<indexterm zone="glade-property-get-enabled"><primary>glade_property_get_enabled</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_get_enabled          (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-i18n-set-comment" role="function">
<title>glade_property_i18n_set_comment ()</title>
<indexterm zone="glade-property-i18n-set-comment"><primary>glade_property_i18n_set_comment</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_i18n_set_comment     (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         const <link linkend="gchar">gchar</link> *str);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>str</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-i18n-get-comment" role="function">
<title>glade_property_i18n_get_comment ()</title>
<indexterm zone="glade-property-i18n-get-comment"><primary>glade_property_i18n_get_comment</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        glade_property_i18n_get_comment     (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-i18n-set-translatable" role="function">
<title>glade_property_i18n_set_translatable ()</title>
<indexterm zone="glade-property-i18n-set-translatable"><primary>glade_property_i18n_set_translatable</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_i18n_set_translatable
                                                        (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="gboolean">gboolean</link> translatable);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>translatable</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-i18n-get-translatable" role="function">
<title>glade_property_i18n_get_translatable ()</title>
<indexterm zone="glade-property-i18n-get-translatable"><primary>glade_property_i18n_get_translatable</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_i18n_get_translatable
                                                        (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-i18n-set-has-context" role="function">
<title>glade_property_i18n_set_has_context ()</title>
<indexterm zone="glade-property-i18n-set-has-context"><primary>glade_property_i18n_set_has_context</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_i18n_set_has_context (<link linkend="GladeProperty">GladeProperty</link> *property,
                                                         <link linkend="gboolean">gboolean</link> has_context);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>has_context</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-i18n-get-has-context" role="function">
<title>glade_property_i18n_get_has_context ()</title>
<indexterm zone="glade-property-i18n-get-has-context"><primary>glade_property_i18n_get_has_context</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_i18n_get_has_context (<link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-push-superuser" role="function">
<title>glade_property_push_superuser ()</title>
<indexterm zone="glade-property-push-superuser"><primary>glade_property_push_superuser</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_push_superuser       (void);</programlisting>
<para>

</para></refsect2>
<refsect2 id="glade-property-pop-superuser" role="function">
<title>glade_property_pop_superuser ()</title>
<indexterm zone="glade-property-pop-superuser"><primary>glade_property_pop_superuser</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_pop_superuser        (void);</programlisting>
<para>

</para></refsect2>
<refsect2 id="glade-property-superuser" role="function">
<title>glade_property_superuser ()</title>
<indexterm zone="glade-property-superuser"><primary>glade_property_superuser</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_superuser            (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="gladeui-glade-property.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GladeProperty--enabled"><title>The <literal>&quot;enabled&quot;</literal> property</title>
<indexterm zone="GladeProperty--enabled"><primary>GladeProperty:enabled</primary></indexterm><programlisting>  &quot;enabled&quot;                  <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>If the property is optional, this is its enabled state.</para><para>Default value: TRUE</para>
</refsect2>
<refsect2 id="GladeProperty--i18n-comment"><title>The <literal>&quot;i18n-comment&quot;</literal> property</title>
<indexterm zone="GladeProperty--i18n-comment"><primary>GladeProperty:i18n-comment</primary></indexterm><programlisting>  &quot;i18n-comment&quot;             <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>Comment for translators.</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="GladeProperty--i18n-has-context"><title>The <literal>&quot;i18n-has-context&quot;</literal> property</title>
<indexterm zone="GladeProperty--i18n-has-context"><primary>GladeProperty:i18n-has-context</primary></indexterm><programlisting>  &quot;i18n-has-context&quot;         <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>Whether or not the translatable string has a context prefix.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2 id="GladeProperty--i18n-translatable"><title>The <literal>&quot;i18n-translatable&quot;</literal> property</title>
<indexterm zone="GladeProperty--i18n-translatable"><primary>GladeProperty:i18n-translatable</primary></indexterm><programlisting>  &quot;i18n-translatable&quot;        <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>Whether this property is translatable or not.</para><para>Default value: TRUE</para>
</refsect2>
<refsect2 id="GladeProperty--sensitive"><title>The <literal>&quot;sensitive&quot;</literal> property</title>
<indexterm zone="GladeProperty--sensitive"><primary>GladeProperty:sensitive</primary></indexterm><programlisting>  &quot;sensitive&quot;                <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>This gives backends control to set property sensitivity.</para><para>Default value: TRUE</para>
</refsect2>

</refsect1>

<refsect1 id="gladeui-glade-property.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GladeProperty-tooltip-changed"><title>The <literal>&quot;tooltip-changed&quot;</literal> signal</title>
<indexterm zone="GladeProperty-tooltip-changed"><primary>GladeProperty::tooltip-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProperty">GladeProperty</link> *gladeproperty,
                                                        <link linkend="gpointer">gpointer</link>       arg1,
                                                        <link linkend="gpointer">gpointer</link>       user_data)          : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproperty</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GladeProperty-value-changed"><title>The <literal>&quot;value-changed&quot;</literal> signal</title>
<indexterm zone="GladeProperty-value-changed"><primary>GladeProperty::value-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProperty">GladeProperty</link> *gladeproperty,
                                                        <link linkend="gpointer">gpointer</link>       arg1,
                                                        <link linkend="gpointer">gpointer</link>       arg2,
                                                        <link linkend="gpointer">gpointer</link>       user_data)          : Run Last</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproperty</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
