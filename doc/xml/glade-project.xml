<refentry id="GladeProject">
<refmeta>
<refentrytitle role="top_of_page">GladeProject</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GLADEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GladeProject</refname>
<refpurpose>The Glade document hub and Load/Save interface.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



                    <link linkend="GladeProjectPrivate">GladeProjectPrivate</link>;
struct              <link linkend="GladeProject-struct">GladeProject</link>;
<link linkend="GladeProject">GladeProject</link>*       <link linkend="glade-project-new">glade_project_new</link>                   (void);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-project-load-from-file">glade_project_load_from_file</link>        (<link linkend="GladeProject">GladeProject</link> *project,
                                                         const <link linkend="gchar">gchar</link> *path);
<link linkend="GladeProject">GladeProject</link>*       <link linkend="glade-project-load">glade_project_load</link>                  (const <link linkend="gchar">gchar</link> *path);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-project-save">glade_project_save</link>                  (<link linkend="GladeProject">GladeProject</link> *project,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="gchar">gchar</link>*        <link linkend="glade-project-get-path">glade_project_get_path</link>              (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="gchar">gchar</link>*              <link linkend="glade-project-get-name">glade_project_get_name</link>              (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="void">void</link>                <link linkend="glade-project-undo">glade_project_undo</link>                  (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="void">void</link>                <link linkend="glade-project-redo">glade_project_redo</link>                  (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="GladeCommand">GladeCommand</link>*       <link linkend="glade-project-next-undo-item">glade_project_next_undo_item</link>        (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="GladeCommand">GladeCommand</link>*       <link linkend="glade-project-next-redo-item">glade_project_next_redo_item</link>        (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="void">void</link>                <link linkend="glade-project-push-undo">glade_project_push_undo</link>             (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GladeCommand">GladeCommand</link> *cmd);
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="glade-project-undo-items">glade_project_undo_items</link>            (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="glade-project-redo-items">glade_project_redo_items</link>            (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="void">void</link>                <link linkend="glade-project-reset-path">glade_project_reset_path</link>            (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-project-get-readonly">glade_project_get_readonly</link>          (<link linkend="GladeProject">GladeProject</link> *project);
const <link linkend="GList">GList</link>*        <link linkend="glade-project-get-objects">glade_project_get_objects</link>           (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="void">void</link>                <link linkend="glade-project-add-object">glade_project_add_object</link>            (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GladeProject">GladeProject</link> *old_project,
                                                         <link linkend="GObject">GObject</link> *object);
<link linkend="void">void</link>                <link linkend="glade-project-remove-object">glade_project_remove_object</link>         (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-project-has-object">glade_project_has_object</link>            (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object);
<link linkend="GladeWidget">GladeWidget</link>*        <link linkend="glade-project-get-widget-by-name">glade_project_get_widget_by_name</link>    (<link linkend="GladeProject">GladeProject</link> *project,
                                                         const <link linkend="char">char</link> *name);
<link linkend="char">char</link>*               <link linkend="glade-project-new-widget-name">glade_project_new_widget_name</link>       (<link linkend="GladeProject">GladeProject</link> *project,
                                                         const <link linkend="char">char</link> *base_name);
<link linkend="void">void</link>                <link linkend="glade-project-widget-name-changed">glade_project_widget_name_changed</link>   (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GladeWidget">GladeWidget</link> *widget,
                                                         const <link linkend="char">char</link> *old_name);
<link linkend="GtkTooltips">GtkTooltips</link>*        <link linkend="glade-project-get-tooltips">glade_project_get_tooltips</link>          (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-project-is-selected">glade_project_is_selected</link>           (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object);
<link linkend="void">void</link>                <link linkend="glade-project-selection-set">glade_project_selection_set</link>         (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object,
                                                         <link linkend="gboolean">gboolean</link> emit_signal);
<link linkend="void">void</link>                <link linkend="glade-project-selection-add">glade_project_selection_add</link>         (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object,
                                                         <link linkend="gboolean">gboolean</link> emit_signal);
<link linkend="void">void</link>                <link linkend="glade-project-selection-remove">glade_project_selection_remove</link>      (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object,
                                                         <link linkend="gboolean">gboolean</link> emit_signal);
<link linkend="void">void</link>                <link linkend="glade-project-selection-clear">glade_project_selection_clear</link>       (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="gboolean">gboolean</link> emit_signal);
<link linkend="void">void</link>                <link linkend="glade-project-selection-changed">glade_project_selection_changed</link>     (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="GList">GList</link>*              <link linkend="glade-project-selection-get">glade_project_selection_get</link>         (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-project-get-has-selection">glade_project_get_has_selection</link>     (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="void">void</link>                <link linkend="glade-project-set-accel-group">glade_project_set_accel_group</link>       (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group);
<link linkend="void">void</link>                <link linkend="glade-project-set-resource">glade_project_set_resource</link>          (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GladeProperty">GladeProperty</link> *property,
                                                         const <link linkend="gchar">gchar</link> *resource);
<link linkend="GList">GList</link>*              <link linkend="glade-project-list-resources">glade_project_list_resources</link>        (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="gchar">gchar</link>*              <link linkend="glade-project-resource-fullpath">glade_project_resource_fullpath</link>     (<link linkend="GladeProject">GladeProject</link> *project,
                                                         const <link linkend="gchar">gchar</link> *resource);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-project-is-loading">glade_project_is_loading</link>            (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="time-t">time_t</link>              <link linkend="glade-project-get-file-mtime">glade_project_get_file_mtime</link>        (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="guint">guint</link>               <link linkend="glade-project-get-instance-count">glade_project_get_instance_count</link>    (<link linkend="GladeProject">GladeProject</link> *project);
<link linkend="void">void</link>                <link linkend="glade-project-set-instance-count">glade_project_set_instance_count</link>    (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="guint">guint</link> instance_count);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-project-get-modified">glade_project_get_modified</link>          (<link linkend="GladeProject">GladeProject</link> *project);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GladeProject
</synopsis>

</refsect1>





<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="GladeProject--has-selection">has-selection</link>&quot;            <link linkend="gboolean">gboolean</link>              : Read
  &quot;<link linkend="GladeProject--modified">modified</link>&quot;                 <link linkend="gboolean">gboolean</link>              : Read
  &quot;<link linkend="GladeProject--path">path</link>&quot;                     <link linkend="gchararray">gchararray</link>            : Read
  &quot;<link linkend="GladeProject--read-only">read-only</link>&quot;                <link linkend="gboolean">gboolean</link>              : Read
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  &quot;<link linkend="GladeProject-add-widget">add-widget</link>&quot;                                     : Run Last
  &quot;<link linkend="GladeProject-changed">changed</link>&quot;                                        : Run First
  &quot;<link linkend="GladeProject-close">close</link>&quot;                                          : Run Last
  &quot;<link linkend="GladeProject-parse-finished">parse-finished</link>&quot;                                 : Run First
  &quot;<link linkend="GladeProject-remove-widget">remove-widget</link>&quot;                                  : Run Last
  &quot;<link linkend="GladeProject-resource-added">resource-added</link>&quot;                                 : Run Last
  &quot;<link linkend="GladeProject-resource-removed">resource-removed</link>&quot;                               : Run Last
  &quot;<link linkend="GladeProject-selection-changed">selection-changed</link>&quot;                              : Run Last
  &quot;<link linkend="GladeProject-widget-name-changed">widget-name-changed</link>&quot;                            : Run Last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
This object owns all project objects and is responsable for loading and
saving the glade document, you can monitor the project state via this
object and its signals.</para>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GladeProjectPrivate" role="struct"/>GladeProjectPrivate</title>
<indexterm><primary>GladeProjectPrivate</primary></indexterm><programlisting>typedef struct _GladeProjectPrivate GladeProjectPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GladeProject-struct" role="struct"/>struct GladeProject</title>
<indexterm><primary>GladeProject</primary></indexterm><programlisting>struct GladeProject;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="glade-project-new" role="function"/>glade_project_new ()</title>
<indexterm><primary>glade_project_new</primary></indexterm><programlisting><link linkend="GladeProject">GladeProject</link>*       glade_project_new                   (void);</programlisting>
<para>
Creates a new <link linkend="GladeProject"><type>GladeProject</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-load-from-file" role="function"/>glade_project_load_from_file ()</title>
<indexterm><primary>glade_project_load_from_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_project_load_from_file        (<link linkend="GladeProject">GladeProject</link> *project,
                                                         const <link linkend="gchar">gchar</link> *path);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-load" role="function"/>glade_project_load ()</title>
<indexterm><primary>glade_project_load</primary></indexterm><programlisting><link linkend="GladeProject">GladeProject</link>*       glade_project_load                  (const <link linkend="gchar">gchar</link> *path);</programlisting>
<para>
Opens a project at the given path.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GladeProject"><type>GladeProject</type></link> for the opened project on success, <link linkend="NULL:CAPS"><literal>NULL</literal></link> on 
         failure
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-save" role="function"/>glade_project_save ()</title>
<indexterm><primary>glade_project_save</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_project_save                  (<link linkend="GladeProject">GladeProject</link> *project,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Saves <parameter>project</parameter> to the given path.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> location to save glade file
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> an error from the G_FILE_ERROR domain.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> on failure
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-get-path" role="function"/>glade_project_get_path ()</title>
<indexterm><primary>glade_project_get_path</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        glade_project_get_path              (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-get-name" role="function"/>glade_project_get_name ()</title>
<indexterm><primary>glade_project_get_name</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              glade_project_get_name              (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-undo" role="function"/>glade_project_undo ()</title>
<indexterm><primary>glade_project_undo</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_undo                  (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
Redoes a <link linkend="GladeCommand"><type>GladeCommand</type></link> in this project.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-redo" role="function"/>glade_project_redo ()</title>
<indexterm><primary>glade_project_redo</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_redo                  (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-next-undo-item" role="function"/>glade_project_next_undo_item ()</title>
<indexterm><primary>glade_project_next_undo_item</primary></indexterm><programlisting><link linkend="GladeCommand">GladeCommand</link>*       glade_project_next_undo_item        (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
Gets the next undo item on <parameter>project</parameter>'s command stack.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GladeCommand"><type>GladeCommand</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-next-redo-item" role="function"/>glade_project_next_redo_item ()</title>
<indexterm><primary>glade_project_next_redo_item</primary></indexterm><programlisting><link linkend="GladeCommand">GladeCommand</link>*       glade_project_next_redo_item        (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
Gets the next redo item on <parameter>project</parameter>'s command stack.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GladeCommand"><type>GladeCommand</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-push-undo" role="function"/>glade_project_push_undo ()</title>
<indexterm><primary>glade_project_push_undo</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_push_undo             (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GladeCommand">GladeCommand</link> *cmd);</programlisting>
<para>
Pushes a newly created <link linkend="GladeCommand"><type>GladeCommand</type></link> onto <parameter>projects</parameter> stack.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cmd</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeCommand"><type>GladeCommand</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-undo-items" role="function"/>glade_project_undo_items ()</title>
<indexterm><primary>glade_project_undo_items</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          glade_project_undo_items            (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
Creates a menu of the undo items in the project stack</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly created menu
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-redo-items" role="function"/>glade_project_redo_items ()</title>
<indexterm><primary>glade_project_redo_items</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          glade_project_redo_items            (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
Creates a menu of the undo items in the project stack</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly created menu
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-reset-path" role="function"/>glade_project_reset_path ()</title>
<indexterm><primary>glade_project_reset_path</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_reset_path            (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-get-readonly" role="function"/>glade_project_get_readonly ()</title>
<indexterm><primary>glade_project_get_readonly</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_project_get_readonly          (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
Gets whether the project is read only or not</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if project is read only
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-get-objects" role="function"/>glade_project_get_objects ()</title>
<indexterm><primary>glade_project_get_objects</primary></indexterm><programlisting>const <link linkend="GList">GList</link>*        glade_project_get_objects           (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-add-object" role="function"/>glade_project_add_object ()</title>
<indexterm><primary>glade_project_add_object</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_add_object            (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GladeProject">GladeProject</link> *old_project,
                                                         <link linkend="GObject">GObject</link> *object);</programlisting>
<para>
Adds an object to the project.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> the widget is added to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>old_project</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> the widget was previously in
              (or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for the clipboard)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GObject"><type>GObject</type></link> to add
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-remove-object" role="function"/>glade_project_remove_object ()</title>
<indexterm><primary>glade_project_remove_object</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_remove_object         (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object);</programlisting>
<para>
Removes <parameter>object</parameter> from <parameter>project</parameter>.
</para>
<para>
Note that when removing the <link linkend="GObject"><type>GObject</type></link> from the project we
don't change ->project in the associated <link linkend="GladeWidget"><type>GladeWidget</type></link>; this
way UNDO can work.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GObject"><type>GObject</type></link> to remove
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-has-object" role="function"/>glade_project_has_object ()</title>
<indexterm><primary>glade_project_has_object</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_project_has_object            (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> the widget is added to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GObject"><type>GObject</type></link> to search
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>whether this object is in this project.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-get-widget-by-name" role="function"/>glade_project_get_widget_by_name ()</title>
<indexterm><primary>glade_project_get_widget_by_name</primary></indexterm><programlisting><link linkend="GladeWidget">GladeWidget</link>*        glade_project_get_widget_by_name    (<link linkend="GladeProject">GladeProject</link> *project,
                                                         const <link linkend="char">char</link> *name);</programlisting>
<para>
Searches through <parameter>project</parameter> looking for a <link linkend="GladeWidget"><type>GladeWidget</type></link> named <parameter>name</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> The user visible name of the widget we are looking for
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a pointer to the widget, <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the widget does not exist
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-new-widget-name" role="function"/>glade_project_new_widget_name ()</title>
<indexterm><primary>glade_project_new_widget_name</primary></indexterm><programlisting><link linkend="char">char</link>*               glade_project_new_widget_name       (<link linkend="GladeProject">GladeProject</link> *project,
                                                         const <link linkend="char">char</link> *base_name);</programlisting>
<para>
Creates a new name for a widget that doesn't collide with any of the names 
already in <parameter>project</parameter>. This name will start with <parameter>base_name</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>base_name</parameter>&nbsp;:</term>
<listitem><simpara> base name of the widget to create
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a string containing the new name, <link linkend="NULL:CAPS"><literal>NULL</literal></link> if there is not enough 
         memory for this string
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-widget-name-changed" role="function"/>glade_project_widget_name_changed ()</title>
<indexterm><primary>glade_project_widget_name_changed</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_widget_name_changed   (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GladeWidget">GladeWidget</link> *widget,
                                                         const <link linkend="char">char</link> *old_name);</programlisting>
<para>
TODO: write me</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>old_name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-get-tooltips" role="function"/>glade_project_get_tooltips ()</title>
<indexterm><primary>glade_project_get_tooltips</primary></indexterm><programlisting><link linkend="GtkTooltips">GtkTooltips</link>*        glade_project_get_tooltips          (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="GtkTooltips"><type>GtkTooltips</type></link> object containing all tooltips for <parameter>project</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-is-selected" role="function"/>glade_project_is_selected ()</title>
<indexterm><primary>glade_project_is_selected</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_project_is_selected           (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>object</parameter> is in <parameter>project</parameter> selection
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-selection-set" role="function"/>glade_project_selection_set ()</title>
<indexterm><primary>glade_project_selection_set</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_selection_set         (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object,
                                                         <link linkend="gboolean">gboolean</link> emit_signal);</programlisting>
<para>
Set the selection in <parameter>project</parameter> to <parameter>object</parameter>
</para>
<para>
If <parameter>emit_signal</parameter> is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, calls <link linkend="glade-project-selection-changed"><function>glade_project_selection_changed()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara>  a <link linkend="GObject"><type>GObject</type></link> in <parameter>project</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>emit_signal</parameter>&nbsp;:</term>
<listitem><simpara> whether or not to emit a signal 
              indicating a selection change
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-selection-add" role="function"/>glade_project_selection_add ()</title>
<indexterm><primary>glade_project_selection_add</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_selection_add         (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object,
                                                         <link linkend="gboolean">gboolean</link> emit_signal);</programlisting>
<para>
Adds <parameter>object</parameter> to the selection chain of <parameter>project</parameter>
</para>
<para>
If <parameter>emit_signal</parameter> is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, calls <link linkend="glade-project-selection-changed"><function>glade_project_selection_changed()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara>  a <link linkend="GObject"><type>GObject</type></link> in <parameter>project</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>emit_signal</parameter>&nbsp;:</term>
<listitem><simpara> whether or not to emit a signal indicating 
              a selection change
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-selection-remove" role="function"/>glade_project_selection_remove ()</title>
<indexterm><primary>glade_project_selection_remove</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_selection_remove      (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GObject">GObject</link> *object,
                                                         <link linkend="gboolean">gboolean</link> emit_signal);</programlisting>
<para>
Removes <parameter>object</parameter> from the selection chain of <parameter>project</parameter>
</para>
<para>
If <parameter>emit_signal</parameter> is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, calls <link linkend="glade-project-selection-changed"><function>glade_project_selection_changed()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara>  a <link linkend="GObject"><type>GObject</type></link> in <parameter>project</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>emit_signal</parameter>&nbsp;:</term>
<listitem><simpara> whether or not to emit a signal 
              indicating a selection change
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-selection-clear" role="function"/>glade_project_selection_clear ()</title>
<indexterm><primary>glade_project_selection_clear</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_selection_clear       (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="gboolean">gboolean</link> emit_signal);</programlisting>
<para>
Clears <parameter>project</parameter>'s selection chain
</para>
<para>
If <parameter>emit_signal</parameter> is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, calls <link linkend="glade-project-selection-changed"><function>glade_project_selection_changed()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>emit_signal</parameter>&nbsp;:</term>
<listitem><simpara> whether or not to emit a signal indication a selection change
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-selection-changed" role="function"/>glade_project_selection_changed ()</title>
<indexterm><primary>glade_project_selection_changed</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_selection_changed     (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
Causes <parameter>project</parameter> to emit a "selection_changed" signal.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-selection-get" role="function"/>glade_project_selection_get ()</title>
<indexterm><primary>glade_project_selection_get</primary></indexterm><programlisting><link linkend="GList">GList</link>*              glade_project_selection_get         (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="GList"><type>GList</type></link> containing the <link linkend="GtkWidget"><type>GtkWidget</type></link> items currently selected in 
         <parameter>project</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-get-has-selection" role="function"/>glade_project_get_has_selection ()</title>
<indexterm><primary>glade_project_get_has_selection</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_project_get_has_selection     (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>project</parameter> currently has a selection
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-set-accel-group" role="function"/>glade_project_set_accel_group ()</title>
<indexterm><primary>glade_project_set_accel_group</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_set_accel_group       (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group);</programlisting>
<para>
Set <parameter>accel_group</parameter> to every top level widget in <parameter>project</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>accel_group</parameter>&nbsp;:</term>
<listitem><simpara> The <parameter>GtkAccelGroup</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-set-resource" role="function"/>glade_project_set_resource ()</title>
<indexterm><primary>glade_project_set_resource</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_set_resource          (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="GladeProperty">GladeProperty</link> *property,
                                                         const <link linkend="gchar">gchar</link> *resource);</programlisting>
<para>
Adds/Modifies/Removes a resource from a project; any project resources
will be copied when using "Save As...", when moving widgets across projects
and will be copied into the project's directory when selected.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GladeProperty"><type>GladeProperty</type></link> this resource is required by
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>resource</parameter>&nbsp;:</term>
<listitem><simpara> The resource file basename to be found in the same
           directory as the glade file.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-list-resources" role="function"/>glade_project_list_resources ()</title>
<indexterm><primary>glade_project_list_resources</primary></indexterm><programlisting><link linkend="GList">GList</link>*              glade_project_list_resources        (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly allocated <link linkend="GList"><type>GList</type></link> of file basenames
         of resources in this project, note that the
         strings are not allocated and are unsafe to
         use once the projects state changes.
         The returned list should be freed with g_list_free.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-resource-fullpath" role="function"/>glade_project_resource_fullpath ()</title>
<indexterm><primary>glade_project_resource_fullpath</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              glade_project_resource_fullpath     (<link linkend="GladeProject">GladeProject</link> *project,
                                                         const <link linkend="gchar">gchar</link> *resource);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GladeProject"><type>GladeProject</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>resource</parameter>&nbsp;:</term>
<listitem><simpara> The resource basename
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly allocated string holding the 
         full path the the project resource.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-is-loading" role="function"/>glade_project_is_loading ()</title>
<indexterm><primary>glade_project_is_loading</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_project_is_loading            (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Whether the project is being loaded or not
      
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-get-file-mtime" role="function"/>glade_project_get_file_mtime ()</title>
<indexterm><primary>glade_project_get_file_mtime</primary></indexterm><programlisting><link linkend="time-t">time_t</link>              glade_project_get_file_mtime        (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-get-instance-count" role="function"/>glade_project_get_instance_count ()</title>
<indexterm><primary>glade_project_get_instance_count</primary></indexterm><programlisting><link linkend="guint">guint</link>               glade_project_get_instance_count    (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-set-instance-count" role="function"/>glade_project_set_instance_count ()</title>
<indexterm><primary>glade_project_set_instance_count</primary></indexterm><programlisting><link linkend="void">void</link>                glade_project_set_instance_count    (<link linkend="GladeProject">GladeProject</link> *project,
                                                         <link linkend="guint">guint</link> instance_count);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>instance_count</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-project-get-modified" role="function"/>glade_project_get_modified ()</title>
<indexterm><primary>glade_project_get_modified</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_project_get_modified          (<link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
Get's whether the project has been modified since it was last saved.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><type>TRUE</type></link> if the project has been modified since it was last saved
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="GladeProject--has-selection"/>The <literal>&quot;has-selection&quot;</literal> property</title>
<indexterm><primary>GladeProject:has-selection</primary></indexterm><programlisting>  &quot;has-selection&quot;            <link linkend="gboolean">gboolean</link>              : Read</programlisting>
<para>Whether project has a selection.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GladeProject--modified"/>The <literal>&quot;modified&quot;</literal> property</title>
<indexterm><primary>GladeProject:modified</primary></indexterm><programlisting>  &quot;modified&quot;                 <link linkend="gboolean">gboolean</link>              : Read</programlisting>
<para>Whether project has been modified since it was last saved.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GladeProject--path"/>The <literal>&quot;path&quot;</literal> property</title>
<indexterm><primary>GladeProject:path</primary></indexterm><programlisting>  &quot;path&quot;                     <link linkend="gchararray">gchararray</link>            : Read</programlisting>
<para>The filesystem path of the project.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GladeProject--read-only"/>The <literal>&quot;read-only&quot;</literal> property</title>
<indexterm><primary>GladeProject:read-only</primary></indexterm><programlisting>  &quot;read-only&quot;                <link linkend="gboolean">gboolean</link>              : Read</programlisting>
<para>Whether project is read only or not.</para><para>Default value: FALSE</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GladeProject-add-widget"/>The <literal>&quot;add-widget&quot;</literal> signal</title>
<indexterm><primary>GladeProject::add-widget</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProject">GladeProject</link> *gladeproject,
                                                        <link linkend="GladeWidget">GladeWidget</link>  *arg1,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run Last</programlisting>
<para>
Emitted when a widget is added to a project.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproject</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> that was added to <parameter>gladeproject</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeProject-changed"/>The <literal>&quot;changed&quot;</literal> signal</title>
<indexterm><primary>GladeProject::changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProject">GladeProject</link> *gladeproject,
                                                        <link linkend="GladeCommand">GladeCommand</link> *arg1,
                                                        <link linkend="gboolean">gboolean</link>      arg2,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run First</programlisting>
<para>
Emitted when a <parameter>gladeproject</parameter>'s state changes via a <link linkend="GladeCommand"><type>GladeCommand</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproject</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeCommand"><type>GladeCommand</type></link> that was executed
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara> whether the command was executed or undone.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeProject-close"/>The <literal>&quot;close&quot;</literal> signal</title>
<indexterm><primary>GladeProject::close</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProject">GladeProject</link> *gladeproject,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run Last</programlisting>
<para>
Emitted when a project is closing (a good time to clean up
any associated resources).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproject</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeProject-parse-finished"/>The <literal>&quot;parse-finished&quot;</literal> signal</title>
<indexterm><primary>GladeProject::parse-finished</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProject">GladeProject</link> *gladeproject,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run First</programlisting>
<para>
Emitted when <parameter>gladeproject</parameter> parsing has finished.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproject</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeProject-remove-widget"/>The <literal>&quot;remove-widget&quot;</literal> signal</title>
<indexterm><primary>GladeProject::remove-widget</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProject">GladeProject</link> *gladeproject,
                                                        <link linkend="GladeWidget">GladeWidget</link>  *arg1,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run Last</programlisting>
<para>
Emitted when a widget is removed from a project.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproject</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> that was removed from <parameter>gladeproject</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeProject-resource-added"/>The <literal>&quot;resource-added&quot;</literal> signal</title>
<indexterm><primary>GladeProject::resource-added</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProject">GladeProject</link> *gladeproject,
                                                        <link linkend="gchar">gchar</link>        *arg1,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run Last</programlisting>
<para>
Emitted when a resource file required by a <link linkend="GladeProperty"><type>GladeProperty</type></link> is
added to <parameter>gladeproject</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproject</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the file's basename (in the project path).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeProject-resource-removed"/>The <literal>&quot;resource-removed&quot;</literal> signal</title>
<indexterm><primary>GladeProject::resource-removed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProject">GladeProject</link> *gladeproject,
                                                        <link linkend="gchar">gchar</link>        *arg1,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run Last</programlisting>
<para>
Emitted when a resource file is removed from <parameter>gladeproject</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproject</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the file's basename
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeProject-selection-changed"/>The <literal>&quot;selection-changed&quot;</literal> signal</title>
<indexterm><primary>GladeProject::selection-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProject">GladeProject</link> *gladeproject,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run Last</programlisting>
<para>
Emitted when <parameter>gladeproject</parameter> selection list changes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproject</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeProject-widget-name-changed"/>The <literal>&quot;widget-name-changed&quot;</literal> signal</title>
<indexterm><primary>GladeProject::widget-name-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeProject">GladeProject</link> *gladeproject,
                                                        <link linkend="GladeWidget">GladeWidget</link>  *arg1,
                                                        <link linkend="gpointer">gpointer</link>      user_data)         : Run Last</programlisting>
<para>
Emitted when <parameter>gwidget</parameter>'s name changes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeproject</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> who's name changed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>




<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>
