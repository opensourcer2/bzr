<refentry id="GladeEditor">
<refmeta>
<refentrytitle role="top_of_page">GladeEditor</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GLADEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GladeEditor</refname>
<refpurpose>A Widget to edit a <link linkend="GladeWidget"><type>GladeWidget</type></link>.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



#define             <link linkend="GLADE-EDITOR-TABLE:CAPS">GLADE_EDITOR_TABLE</link>                  (t)
#define             <link linkend="GLADE-IS-EDITOR-TABLE:CAPS">GLADE_IS_EDITOR_TABLE</link>               (t)
                    <link linkend="GladeEditorTable">GladeEditorTable</link>;
enum                <link linkend="GladeEditorTableType">GladeEditorTableType</link>;
                    <link linkend="GladeEditor-struct">GladeEditor</link>;
<link linkend="GladeEditor">GladeEditor</link>*        <link linkend="glade-editor-new">glade_editor_new</link>                    (void);
<link linkend="void">void</link>                <link linkend="glade-editor-load-widget">glade_editor_load_widget</link>            (<link linkend="GladeEditor">GladeEditor</link> *editor,
                                                         <link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="void">void</link>                <link linkend="glade-editor-refresh">glade_editor_refresh</link>                (<link linkend="GladeEditor">GladeEditor</link> *editor);
<link linkend="void">void</link>                <link linkend="glade-editor-update-widget-name">glade_editor_update_widget_name</link>     (<link linkend="GladeEditor">GladeEditor</link> *editor);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-editor-query-dialog">glade_editor_query_dialog</link>           (<link linkend="GladeEditor">GladeEditor</link> *editor,
                                                         <link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="void">void</link>                <link linkend="glade-editor-show-info">glade_editor_show_info</link>              (<link linkend="GladeEditor">GladeEditor</link> *editor);
<link linkend="void">void</link>                <link linkend="glade-editor-show-context-info">glade_editor_show_context_info</link>      (<link linkend="GladeEditor">GladeEditor</link> *editor);
<link linkend="void">void</link>                <link linkend="glade-editor-hide-info">glade_editor_hide_info</link>              (<link linkend="GladeEditor">GladeEditor</link> *editor);
<link linkend="void">void</link>                <link linkend="glade-editor-hide-context-info">glade_editor_hide_context_info</link>      (<link linkend="GladeEditor">GladeEditor</link> *editor);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----<link linkend="GtkWidget">GtkWidget</link>
                     +----<link linkend="GtkContainer">GtkContainer</link>
                           +----<link linkend="GtkBox">GtkBox</link>
                                 +----<link linkend="GtkVBox">GtkVBox</link>
                                       +----GladeEditor
</synopsis>

</refsect1>



<refsect1 role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GladeEditor implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link> and  <link linkend="GtkBuildable">GtkBuildable</link>.</para>

</refsect1>


<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="GladeEditor--show-context-info">show-context-info</link>&quot;        <link linkend="gboolean">gboolean</link>              : Read
  &quot;<link linkend="GladeEditor--show-info">show-info</link>&quot;                <link linkend="gboolean">gboolean</link>              : Read
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  &quot;<link linkend="GladeEditor-gtk-doc-search">gtk-doc-search</link>&quot;                                 : Run Last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
This is the Glade Notebook containing all the controls needed to configure a <link linkend="GladeWidget"><type>GladeWidget</type></link>.</para>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GLADE-EDITOR-TABLE:CAPS" role="macro"/>GLADE_EDITOR_TABLE()</title>
<indexterm><primary>GLADE_EDITOR_TABLE</primary></indexterm><programlisting>#define GLADE_EDITOR_TABLE(t)       ((GladeEditorTable *)t)
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GLADE-IS-EDITOR-TABLE:CAPS" role="macro"/>GLADE_IS_EDITOR_TABLE()</title>
<indexterm><primary>GLADE_IS_EDITOR_TABLE</primary></indexterm><programlisting>#define GLADE_IS_EDITOR_TABLE(t)    (t != NULL)
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GladeEditorTable" role="struct"/>GladeEditorTable</title>
<indexterm><primary>GladeEditorTable</primary></indexterm><programlisting>typedef struct {
	GladeEditor *editor; /* Handy pointer that avoids havving to pass the
			      * editor arround.
			      */
	
	GladeWidgetAdaptor *adaptor; /* The GladeWidgetAdaptor this
				      * table belongs to.
				      */

	GtkWidget *table_widget; /* This widget is a gtk_vbox that is displayed
				  * in the glade-editor when a widget of this
				  * class is selected. It is hiden when another
				  * type is selected. When we select a widget
				  * we load into the inputs inside this table
				  * the information about the selected widget.
				  */
	
	GtkWidget *name_entry; /* A pointer to the gtk_entry that holds
				* the name of the widget. This is the
				* first item _pack'ed to the table_widget.
				* We have a pointer here because it is an
				* entry which will not be created from a
				* GladeProperty but rather from code.
				*/

	GList *properties; /* A list of GladeEditorPropery items.
			    * For each row in the gtk_table, there is a
			    * corrsponding GladeEditorProperty struct.
			    */

	GladeEditorTableType type; /* Is this table to be used in the common tab, ?
				    * the general tab, a packing tab or the query popup ?
				    */

	gint  rows;
} GladeEditorTable;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GladeEditorTableType" role="enum"/>enum GladeEditorTableType</title>
<indexterm><primary>GladeEditorTableType</primary></indexterm><programlisting>typedef enum _GladeEditorTableType
{
	TABLE_TYPE_GENERAL,
	TABLE_TYPE_COMMON,
	TABLE_TYPE_PACKING,
	TABLE_TYPE_ATK,
	TABLE_TYPE_QUERY
} GladeEditorTableType;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GladeEditor-struct" role="struct"/>GladeEditor</title>
<indexterm><primary>GladeEditor</primary></indexterm><programlisting>typedef struct _GladeEditor GladeEditor;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="glade-editor-new" role="function"/>glade_editor_new ()</title>
<indexterm><primary>glade_editor_new</primary></indexterm><programlisting><link linkend="GladeEditor">GladeEditor</link>*        glade_editor_new                    (void);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GladeEditor"><type>GladeEditor</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-load-widget" role="function"/>glade_editor_load_widget ()</title>
<indexterm><primary>glade_editor_load_widget</primary></indexterm><programlisting><link linkend="void">void</link>                glade_editor_load_widget            (<link linkend="GladeEditor">GladeEditor</link> *editor,
                                                         <link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
Load <parameter>widget</parameter> into <parameter>editor</parameter>. If <parameter>widget</parameter> is <link linkend="NULL:CAPS"><literal>NULL</literal></link>, clear the editor.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeEditor"><type>GladeEditor</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-refresh" role="function"/>glade_editor_refresh ()</title>
<indexterm><primary>glade_editor_refresh</primary></indexterm><programlisting><link linkend="void">void</link>                glade_editor_refresh                (<link linkend="GladeEditor">GladeEditor</link> *editor);</programlisting>
<para>
Synchronize <parameter>editor</parameter> with the currently loaded widget.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeEditor"><type>GladeEditor</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-update-widget-name" role="function"/>glade_editor_update_widget_name ()</title>
<indexterm><primary>glade_editor_update_widget_name</primary></indexterm><programlisting><link linkend="void">void</link>                glade_editor_update_widget_name     (<link linkend="GladeEditor">GladeEditor</link> *editor);</programlisting>
<para>
TODO: write me</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeEditor"><type>GladeEditor</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-query-dialog" role="function"/>glade_editor_query_dialog ()</title>
<indexterm><primary>glade_editor_query_dialog</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_editor_query_dialog           (<link linkend="GladeEditor">GladeEditor</link> *editor,
                                                         <link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-show-info" role="function"/>glade_editor_show_info ()</title>
<indexterm><primary>glade_editor_show_info</primary></indexterm><programlisting><link linkend="void">void</link>                glade_editor_show_info              (<link linkend="GladeEditor">GladeEditor</link> *editor);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-show-context-info" role="function"/>glade_editor_show_context_info ()</title>
<indexterm><primary>glade_editor_show_context_info</primary></indexterm><programlisting><link linkend="void">void</link>                glade_editor_show_context_info      (<link linkend="GladeEditor">GladeEditor</link> *editor);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-hide-info" role="function"/>glade_editor_hide_info ()</title>
<indexterm><primary>glade_editor_hide_info</primary></indexterm><programlisting><link linkend="void">void</link>                glade_editor_hide_info              (<link linkend="GladeEditor">GladeEditor</link> *editor);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-hide-context-info" role="function"/>glade_editor_hide_context_info ()</title>
<indexterm><primary>glade_editor_hide_context_info</primary></indexterm><programlisting><link linkend="void">void</link>                glade_editor_hide_context_info      (<link linkend="GladeEditor">GladeEditor</link> *editor);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="GladeEditor--show-context-info"/>The <literal>&quot;show-context-info&quot;</literal> property</title>
<indexterm><primary>GladeEditor:show-context-info</primary></indexterm><programlisting>  &quot;show-context-info&quot;        <link linkend="gboolean">gboolean</link>              : Read</programlisting>
<para>Whether to show an informational button for each property and signal in the editor.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GladeEditor--show-info"/>The <literal>&quot;show-info&quot;</literal> property</title>
<indexterm><primary>GladeEditor:show-info</primary></indexterm><programlisting>  &quot;show-info&quot;                <link linkend="gboolean">gboolean</link>              : Read</programlisting>
<para>Whether to show an informational button for the loaded widget.</para><para>Default value: FALSE</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GladeEditor-gtk-doc-search"/>The <literal>&quot;gtk-doc-search&quot;</literal> signal</title>
<indexterm><primary>GladeEditor::gtk-doc-search</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GladeEditor">GladeEditor</link> *gladeeditor,
                                                        <link linkend="gchar">gchar</link>       *arg1,
                                                        <link linkend="gchar">gchar</link>       *arg2,
                                                        <link linkend="gchar">gchar</link>       *arg3,
                                                        <link linkend="gpointer">gpointer</link>     user_data)        : Run Last</programlisting>
<para>
Emitted when the editor requests that a doc-search be performed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeeditor</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeEditor"><type>GladeEditor</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the (<link linkend="gchar"><type>gchar</type></link> *) book to search or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara> the (<link linkend="gchar"><type>gchar</type></link> *) page to search or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara> the (<link linkend="gchar"><type>gchar</type></link> *) search string or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>




<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>
