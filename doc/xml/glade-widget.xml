<refentry id="GladeWidget">
<refmeta>
<refentrytitle>GladeWidget</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GLADEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GladeWidget</refname><refpurpose>An object wrapper for the Glade runtime environment.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;glade.h&gt;


struct      <link linkend="GladeWidget-struct">GladeWidget</link>;
<link linkend="GladeWidget">GladeWidget</link>* <link linkend="glade-widget-get-from-gobject">glade_widget_get_from_gobject</link>  (<link linkend="gpointer">gpointer</link> object);
<link linkend="void">void</link>        <link linkend="glade-widget-add-child">glade_widget_add_child</link>          (<link linkend="GladeWidget">GladeWidget</link> *parent,
                                             <link linkend="GladeWidget">GladeWidget</link> *child,
                                             <link linkend="gboolean">gboolean</link> at_mouse);
<link linkend="void">void</link>        <link linkend="glade-widget-remove-child">glade_widget_remove_child</link>       (<link linkend="GladeWidget">GladeWidget</link> *parent,
                                             <link linkend="GladeWidget">GladeWidget</link> *child);
<link linkend="void">void</link>        <link linkend="glade-widget-set-name">glade_widget_set_name</link>           (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *name);
<link linkend="void">void</link>        <link linkend="glade-widget-set-internal">glade_widget_set_internal</link>       (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *internal);
<link linkend="void">void</link>        <link linkend="glade-widget-set-object">glade_widget_set_object</link>         (<link linkend="GladeWidget">GladeWidget</link> *gwidget,
                                             <link linkend="GObject">GObject</link> *new_object);
<link linkend="void">void</link>        <link linkend="glade-widget-set-project">glade_widget_set_project</link>        (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeProject">GladeProject</link> *project);
const <link linkend="gchar">gchar</link>* <link linkend="glade-widget-get-name">glade_widget_get_name</link>          (<link linkend="GladeWidget">GladeWidget</link> *widget);
const <link linkend="gchar">gchar</link>* <link linkend="glade-widget-get-internal">glade_widget_get_internal</link>      (<link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="GladeWidgetClass">GladeWidgetClass</link>* <link linkend="glade-widget-get-class">glade_widget_get_class</link>    (<link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="GladeProject">GladeProject</link>* <link linkend="glade-widget-get-project">glade_widget_get_project</link>      (<link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="GObject">GObject</link>*    <link linkend="glade-widget-get-object">glade_widget_get_object</link>         (<link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="void">void</link>        <link linkend="glade-widget-project-notify">glade_widget_project_notify</link>     (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeProject">GladeProject</link> *project);
<link linkend="void">void</link>        <link linkend="glade-widget-show">glade_widget_show</link>               (<link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="void">void</link>        <link linkend="glade-widget-hide">glade_widget_hide</link>               (<link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="void">void</link>        <link linkend="glade-widget-copy-properties">glade_widget_copy_properties</link>    (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeWidget">GladeWidget</link> *template);
<link linkend="void">void</link>        <link linkend="glade-widget-set-packing-properties">glade_widget_set_packing_properties</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeWidget">GladeWidget</link> *container);
<link linkend="void">void</link>        <link linkend="glade-widget-add-prop-ref">glade_widget_add_prop_ref</link>       (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>        <link linkend="glade-widget-remove-prop-ref">glade_widget_remove_prop_ref</link>    (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="GladeProperty">GladeProperty</link>* <link linkend="glade-widget-get-property">glade_widget_get_property</link>    (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);
<link linkend="GladeProperty">GladeProperty</link>* <link linkend="glade-widget-get-pack-property">glade_widget_get_pack_property</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-property-get">glade_widget_property_get</link>       (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             ...);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-property-set">glade_widget_property_set</link>       (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             ...);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-pack-property-get">glade_widget_pack_property_get</link>  (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             ...);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-pack-property-set">glade_widget_pack_property_set</link>  (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             ...);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-property-reset">glade_widget_property_reset</link>     (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-pack-property-reset">glade_widget_pack_property_reset</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-property-default">glade_widget_property_default</link>   (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-pack-property-default">glade_widget_pack_property_default</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-property-set-sensitive">glade_widget_property_set_sensitive</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             <link linkend="gboolean">gboolean</link> sensitive,
                                             const <link linkend="gchar">gchar</link> *reason);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-pack-property-set-sensitive">glade_widget_pack_property_set_sensitive</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             <link linkend="gboolean">gboolean</link> sensitive,
                                             const <link linkend="gchar">gchar</link> *reason);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-property-set-enabled">glade_widget_property_set_enabled</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             <link linkend="gboolean">gboolean</link> enabled);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-pack-property-set-enabled">glade_widget_pack_property_set_enabled</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             <link linkend="gboolean">gboolean</link> enabled);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-has-decendant">glade_widget_has_decendant</link>      (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GType">GType</link> type);
<link linkend="void">void</link>        <link linkend="glade-widget-replace">glade_widget_replace</link>            (<link linkend="GladeWidget">GladeWidget</link> *parent,
                                             <link linkend="GObject">GObject</link> *old_object,
                                             <link linkend="GObject">GObject</link> *new_object);
<link linkend="void">void</link>        <link linkend="glade-widget-rebuild">glade_widget_rebuild</link>            (<link linkend="GladeWidget">GladeWidget</link> *glade_widget);
<link linkend="GladeWidget">GladeWidget</link>* <link linkend="glade-widget-dup">glade_widget_dup</link>               (<link linkend="GladeWidget">GladeWidget</link> *template);
<link linkend="void">void</link>        <link linkend="glade-widget-add-signal-handler">glade_widget_add_signal_handler</link> (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeSignal">GladeSignal</link> *signal_handler);
<link linkend="void">void</link>        <link linkend="glade-widget-remove-signal-handler">glade_widget_remove_signal_handler</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeSignal">GladeSignal</link> *signal_handler);
<link linkend="void">void</link>        <link linkend="glade-widget-change-signal-handler">glade_widget_change_signal_handler</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeSignal">GladeSignal</link> *old_signal_handler,
                                             <link linkend="GladeSignal">GladeSignal</link> *new_signal_handler);
<link linkend="GPtrArray">GPtrArray</link>*  <link linkend="glade-widget-list-signal-handlers">glade_widget_list_signal_handlers</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *signal_name);
<link linkend="GladeWidgetInfo">GladeWidgetInfo</link>* <link linkend="glade-widget-write">glade_widget_write</link>         (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeInterface">GladeInterface</link> *interface);
<link linkend="GladeWidget">GladeWidget</link>* <link linkend="glade-widget-read">glade_widget_read</link>              (<link linkend="GladeProject">GladeProject</link> *project,
                                             <link linkend="GladeWidgetInfo">GladeWidgetInfo</link> *info);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-has-launcher">glade_widget_has_launcher</link>       (<link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="void">void</link>        <link linkend="glade-widget-launch-editor">glade_widget_launch_editor</link>      (<link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="GladeWidget">GladeWidget</link>* <link linkend="glade-widget-get-parent">glade_widget_get_parent</link>        (<link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="void">void</link>        <link linkend="glade-widget-set-parent">glade_widget_set_parent</link>         (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeWidget">GladeWidget</link> *parent);
<link linkend="GladeWidget">GladeWidget</link>* <link linkend="glade-widget-event-widget">glade_widget_event_widget</link>      (void);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-widget-superuser">glade_widget_superuser</link>          (void);
<link linkend="void">void</link>        <link linkend="glade-widget-push-superuser">glade_widget_push_superuser</link>     (void);
<link linkend="void">void</link>        <link linkend="glade-widget-pop-superuser">glade_widget_pop_superuser</link>      (void);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GladeWidget
         +----<link linkend="GladeFixed">GladeFixed</link>
</synopsis>

</refsect1>





<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GladeWidget--anarchist">anarchist</link>&quot;            <link linkend="gboolean">gboolean</link>              : Read / Write / Construct Only
  &quot;<link linkend="GladeWidget--class">class</link>&quot;                <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only
  &quot;<link linkend="GladeWidget--info">info</link>&quot;                 <link linkend="gpointer">gpointer</link>              : Write / Construct Only
  &quot;<link linkend="GladeWidget--internal">internal</link>&quot;             <link linkend="gchararray">gchararray</link>            : Read / Write / Construct
  &quot;<link linkend="GladeWidget--internal-name">internal-name</link>&quot;        <link linkend="gchararray">gchararray</link>            : Write / Construct Only
  &quot;<link linkend="GladeWidget--name">name</link>&quot;                 <link linkend="gchararray">gchararray</link>            : Read / Write / Construct
  &quot;<link linkend="GladeWidget--object">object</link>&quot;               <link linkend="GObject">GObject</link>               : Read / Write / Construct
  &quot;<link linkend="GladeWidget--parent">parent</link>&quot;               <link linkend="GladeWidget">GladeWidget</link>           : Read / Write / Construct
  &quot;<link linkend="GladeWidget--project">project</link>&quot;              <link linkend="GladeProject">GladeProject</link>          : Read / Write / Construct
  &quot;<link linkend="GladeWidget--properties">properties</link>&quot;           <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only
  &quot;<link linkend="GladeWidget--reason">reason</link>&quot;               <link linkend="gint">gint</link>                  : Write / Construct Only
  &quot;<link linkend="GladeWidget--template">template</link>&quot;             <link linkend="GladeWidget">GladeWidget</link>           : Write / Construct Only
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GladeWidget-add-signal-handler">add-signal-handler</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="gpointer">gpointer</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GladeWidget-button-press-event">button-press-event</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="GdkEventButton">GdkEventButton</link> *arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GladeWidget-button-release-event">button-release-event</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="GdkEventButton">GdkEventButton</link> *event,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GladeWidget-change-signal-handler">change-signal-handler</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="gpointer">gpointer</link> arg1,
                                            <link linkend="gpointer">gpointer</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GladeWidget-enter-notify-event">enter-notify-event</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="GdkEventCrossing">GdkEventCrossing</link> *arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GladeWidget-motion-notify-event">motion-notify-event</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="GdkEventMotion">GdkEventMotion</link> *arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GladeWidget-remove-signal-handler">remove-signal-handler</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="gpointer">gpointer</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
<link linkend="GladeWidget"><type>GladeWidget</type></link> is the proxy between the instantiated runtime object and
the Glade core metadata. This api will be mostly usefull for its
convenience api for getting and setting properties (mostly from the plugin).
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GladeWidget-struct"/>struct GladeWidget</title>
<indexterm><primary>GladeWidget</primary></indexterm><programlisting>struct GladeWidget;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="glade-widget-get-from-gobject"/>glade_widget_get_from_gobject ()</title>
<indexterm><primary>glade_widget_get_from_gobject</primary></indexterm><programlisting><link linkend="GladeWidget">GladeWidget</link>* glade_widget_get_from_gobject  (<link linkend="gpointer">gpointer</link> object);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-add-child"/>glade_widget_add_child ()</title>
<indexterm><primary>glade_widget_add_child</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_add_child          (<link linkend="GladeWidget">GladeWidget</link> *parent,
                                             <link linkend="GladeWidget">GladeWidget</link> *child,
                                             <link linkend="gboolean">gboolean</link> at_mouse);</programlisting>
<para>
Adds <parameter>child</parameter> to <parameter>parent</parameter> in a generic way for this <link linkend="GladeWidget"><type>GladeWidget</type></link> parent.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>parent</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> to add
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>at_mouse</parameter>&nbsp;:</term>
<listitem><simpara> whether the added widget should be added
           at the current mouse position
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-remove-child"/>glade_widget_remove_child ()</title>
<indexterm><primary>glade_widget_remove_child</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_remove_child       (<link linkend="GladeWidget">GladeWidget</link> *parent,
                                             <link linkend="GladeWidget">GladeWidget</link> *child);</programlisting>
<para>
Removes <parameter>child</parameter> from <parameter>parent</parameter> in a generic way for this <link linkend="GladeWidget"><type>GladeWidget</type></link> parent.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>parent</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> to add
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-set-name"/>glade_widget_set_name ()</title>
<indexterm><primary>glade_widget_set_name</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_set_name           (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
Sets <parameter>widget</parameter>'s name to <parameter>name</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> a string
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-set-internal"/>glade_widget_set_internal ()</title>
<indexterm><primary>glade_widget_set_internal</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_set_internal       (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *internal);</programlisting>
<para>
Sets the internal name of <parameter>widget</parameter> to <parameter>internal</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>internal</parameter>&nbsp;:</term>
<listitem><simpara> The internal name
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-set-object"/>glade_widget_set_object ()</title>
<indexterm><primary>glade_widget_set_object</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_set_object         (<link linkend="GladeWidget">GladeWidget</link> *gwidget,
                                             <link linkend="GObject">GObject</link> *new_object);</programlisting>
<para>
Set the runtime object for this GladeWidget wrapper
(this is used deep in the core and is probably unsafe
to use elsewhere).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gwidget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_object</parameter>&nbsp;:</term>
<listitem><simpara> the new <link linkend="GObject"><type>GObject</type></link> for <parameter>gwidget</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-set-project"/>glade_widget_set_project ()</title>
<indexterm><primary>glade_widget_set_project</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_set_project        (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
Makes <parameter>widget</parameter> belong to <parameter>project</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-get-name"/>glade_widget_get_name ()</title>
<indexterm><primary>glade_widget_get_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>* glade_widget_get_name          (<link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a pointer to <parameter>widget</parameter>'s name
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-get-internal"/>glade_widget_get_internal ()</title>
<indexterm><primary>glade_widget_get_internal</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>* glade_widget_get_internal      (<link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the internal name of <parameter>widget</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-get-class"/>glade_widget_get_class ()</title>
<indexterm><primary>glade_widget_get_class</primary></indexterm><programlisting><link linkend="GladeWidgetClass">GladeWidgetClass</link>* glade_widget_get_class    (<link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GladeWidgetclass"><type>GladeWidgetclass</type></link> of <parameter>widget</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-get-project"/>glade_widget_get_project ()</title>
<indexterm><primary>glade_widget_get_project</primary></indexterm><programlisting><link linkend="GladeProject">GladeProject</link>* glade_widget_get_project      (<link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GladeProject"><type>GladeProject</type></link> that <parameter>widget</parameter> belongs to
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-get-object"/>glade_widget_get_object ()</title>
<indexterm><primary>glade_widget_get_object</primary></indexterm><programlisting><link linkend="GObject">GObject</link>*    glade_widget_get_object         (<link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GObject"><type>GObject</type></link> associated with <parameter>widget</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-project-notify"/>glade_widget_project_notify ()</title>
<indexterm><primary>glade_widget_project_notify</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_project_notify     (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
Notifies <parameter>widget</parameter> that it is now in <parameter>project</parameter>.
</para>
<para>
Note that this doesnt really set the project; the project is saved
for internal reasons even when the widget is on the clipboard.
(also used for property references).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GladeProject"><type>GladeProject</type></link> (or <literal>NULL</literal>)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-show"/>glade_widget_show ()</title>
<indexterm><primary>glade_widget_show</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_show               (<link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
Display <parameter>widget</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-hide"/>glade_widget_hide ()</title>
<indexterm><primary>glade_widget_hide</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_hide               (<link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
Hide <parameter>widget</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-copy-properties"/>glade_widget_copy_properties ()</title>
<indexterm><primary>glade_widget_copy_properties</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_copy_properties    (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeWidget">GladeWidget</link> *template);</programlisting>
<para>
Sets properties in <parameter>widget</parameter> based on the values of
matching properties in <parameter>template</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>   a 'dest' <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>template</parameter>&nbsp;:</term>
<listitem><simpara> a 'src' <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-set-packing-properties"/>glade_widget_set_packing_properties ()</title>
<indexterm><primary>glade_widget_set_packing_properties</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_set_packing_properties
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeWidget">GladeWidget</link> *container);</programlisting>
<para>
Generates the packing_properties list of the widget, given
the class of the container we are adding the widget to.
If the widget already has packing_properties, but the container
has changed, the current list is freed and replaced.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>     A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>container</parameter>&nbsp;:</term>
<listitem><simpara>  The parent <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-add-prop-ref"/>glade_widget_add_prop_ref ()</title>
<indexterm><primary>glade_widget_add_prop_ref</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_add_prop_ref       (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
Adds <parameter>property</parameter> to <parameter>widget</parameter> 's list of referenced properties.
</para>
<para>
Note: this is used to track object reference properties that
      go in and out of the project.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-remove-prop-ref"/>glade_widget_remove_prop_ref ()</title>
<indexterm><primary>glade_widget_remove_prop_ref</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_remove_prop_ref    (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
Removes <parameter>property</parameter> from <parameter>widget</parameter> 's list of referenced properties.
</para>
<para>
Note: this is used to track object reference properties that
      go in and out of the project.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-get-property"/>glade_widget_get_property ()</title>
<indexterm><primary>glade_widget_get_property</primary></indexterm><programlisting><link linkend="GladeProperty">GladeProperty</link>* glade_widget_get_property    (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GladeProperty"><type>GladeProperty</type></link> in <parameter>widget</parameter> named <parameter>id_property</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-get-pack-property"/>glade_widget_get_pack_property ()</title>
<indexterm><primary>glade_widget_get_pack_property</primary></indexterm><programlisting><link linkend="GladeProperty">GladeProperty</link>* glade_widget_get_pack_property
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GladeProperty"><type>GladeProperty</type></link> in <parameter>widget</parameter> named <parameter>id_property</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-property-get"/>glade_widget_property_get ()</title>
<indexterm><primary>glade_widget_property_get</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_property_get       (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             ...);</programlisting>
<para>
Gets the value of <parameter>id_property</parameter> in <parameter>widget</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> The return location for the value of the said <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>id_property</parameter> was found or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-property-set"/>glade_widget_property_set ()</title>
<indexterm><primary>glade_widget_property_set</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_property_set       (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             ...);</programlisting>
<para>
Sets the value of <parameter>id_property</parameter> in <parameter>widget</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> A value of the correct type for the said <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>id_property</parameter> was found or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-pack-property-get"/>glade_widget_pack_property_get ()</title>
<indexterm><primary>glade_widget_pack_property_get</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_pack_property_get  (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             ...);</programlisting>
<para>
Gets the value of <parameter>id_property</parameter> in <parameter>widget</parameter> packing properties</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> The return location for the value of the said <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>id_property</parameter> was found or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-pack-property-set"/>glade_widget_pack_property_set ()</title>
<indexterm><primary>glade_widget_pack_property_set</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_pack_property_set  (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             ...);</programlisting>
<para>
Sets the value of <parameter>id_property</parameter> in <parameter>widget</parameter> packing properties</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> The return location for the value of the said <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>id_property</parameter> was found or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-property-reset"/>glade_widget_property_reset ()</title>
<indexterm><primary>glade_widget_property_reset</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_property_reset     (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);</programlisting>
<para>
Resets <parameter>id_property</parameter> in <parameter>widget</parameter> to it's default value</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>id_property</parameter> was found or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-pack-property-reset"/>glade_widget_pack_property_reset ()</title>
<indexterm><primary>glade_widget_pack_property_reset</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_pack_property_reset
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);</programlisting>
<para>
Resets <parameter>id_property</parameter> in <parameter>widget</parameter>'s packing properties to it's default value</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>id_property</parameter> was found or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-property-default"/>glade_widget_property_default ()</title>
<indexterm><primary>glade_widget_property_default</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_property_default   (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether whether <parameter>id_property</parameter> was found and is 
currently set to it's default value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-pack-property-default"/>glade_widget_pack_property_default ()</title>
<indexterm><primary>glade_widget_pack_property_default</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_pack_property_default
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether whether <parameter>id_property</parameter> was found and is 
currently set to it's default value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-property-set-sensitive"/>glade_widget_property_set_sensitive ()</title>
<indexterm><primary>glade_widget_property_set_sensitive</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_property_set_sensitive
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             <link linkend="gboolean">gboolean</link> sensitive,
                                             const <link linkend="gchar">gchar</link> *reason);</programlisting>
<para>
Sets the sensitivity of <parameter>id_property</parameter> in <parameter>widget</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sensitive</parameter>&nbsp;:</term>
<listitem><simpara> setting sensitive or insensitive
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reason</parameter>&nbsp;:</term>
<listitem><simpara> a description of why the user cant edit this property
         which will be used as a tooltip
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>id_property</parameter> was found or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-pack-property-set-sensitive"/>glade_widget_pack_property_set_sensitive ()</title>
<indexterm><primary>glade_widget_pack_property_set_sensitive</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_pack_property_set_sensitive
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             <link linkend="gboolean">gboolean</link> sensitive,
                                             const <link linkend="gchar">gchar</link> *reason);</programlisting>
<para>
Sets the sensitivity of <parameter>id_property</parameter> in <parameter>widget</parameter>'s packing properties.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sensitive</parameter>&nbsp;:</term>
<listitem><simpara> setting sensitive or insensitive
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reason</parameter>&nbsp;:</term>
<listitem><simpara> a description of why the user cant edit this property
         which will be used as a tooltip
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>id_property</parameter> was found or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-property-set-enabled"/>glade_widget_property_set_enabled ()</title>
<indexterm><primary>glade_widget_property_set_enabled</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_property_set_enabled
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             <link linkend="gboolean">gboolean</link> enabled);</programlisting>
<para>
Sets the enabled state of <parameter>id_property</parameter> in <parameter>widget</parameter>; this is
used for optional properties.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enabled</parameter>&nbsp;:</term>
<listitem><simpara> setting enabled or disabled
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>id_property</parameter> was found or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-pack-property-set-enabled"/>glade_widget_pack_property_set_enabled ()</title>
<indexterm><primary>glade_widget_pack_property_set_enabled</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_pack_property_set_enabled
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *id_property,
                                             <link linkend="gboolean">gboolean</link> enabled);</programlisting>
<para>
Sets the enabled state of <parameter>id_property</parameter> in <parameter>widget</parameter>'s packing 
properties; this is used for optional properties.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id_property</parameter>&nbsp;:</term>
<listitem><simpara> a string naming a <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enabled</parameter>&nbsp;:</term>
<listitem><simpara> setting enabled or disabled
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>id_property</parameter> was found or not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-has-decendant"/>glade_widget_has_decendant ()</title>
<indexterm><primary>glade_widget_has_decendant</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_has_decendant      (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GType">GType</link> type);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> a  <link linkend="GType"><type>GType</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether this GladeWidget has any decendants of type <parameter>type</parameter>
         or any decendants that implement the <parameter>type</parameter> interface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-replace"/>glade_widget_replace ()</title>
<indexterm><primary>glade_widget_replace</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_replace            (<link linkend="GladeWidget">GladeWidget</link> *parent,
                                             <link linkend="GObject">GObject</link> *old_object,
                                             <link linkend="GObject">GObject</link> *new_object);</programlisting>
<para>
Replaces a GObject with another GObject inside a GObject which
behaves as a container.
</para>
<para>
Note that both GObjects must be owned by a GladeWidget.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>parent</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>old_object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-rebuild"/>glade_widget_rebuild ()</title>
<indexterm><primary>glade_widget_rebuild</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_rebuild            (<link linkend="GladeWidget">GladeWidget</link> *glade_widget);</programlisting>
<para>
Replaces the current widget instance with
a new one while preserving all properties children and
takes care of reparenting.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>glade_widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-dup"/>glade_widget_dup ()</title>
<indexterm><primary>glade_widget_dup</primary></indexterm><programlisting><link linkend="GladeWidget">GladeWidget</link>* glade_widget_dup               (<link linkend="GladeWidget">GladeWidget</link> *template);</programlisting>
<para>
Creates a deep copy of <link linkend="GladeWidget"><type>GladeWidget</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>template</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The newly created <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-add-signal-handler"/>glade_widget_add_signal_handler ()</title>
<indexterm><primary>glade_widget_add_signal_handler</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_add_signal_handler (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeSignal">GladeSignal</link> *signal_handler);</programlisting>
<para>
Adds a signal handler for <parameter>widget</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>signal_handler</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GladeSignal"><type>GladeSignal</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-remove-signal-handler"/>glade_widget_remove_signal_handler ()</title>
<indexterm><primary>glade_widget_remove_signal_handler</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_remove_signal_handler
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeSignal">GladeSignal</link> *signal_handler);</programlisting>
<para>
Removes a signal handler from <parameter>widget</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>signal_handler</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GladeSignal"><type>GladeSignal</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-change-signal-handler"/>glade_widget_change_signal_handler ()</title>
<indexterm><primary>glade_widget_change_signal_handler</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_change_signal_handler
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeSignal">GladeSignal</link> *old_signal_handler,
                                             <link linkend="GladeSignal">GladeSignal</link> *new_signal_handler);</programlisting>
<para>
Changes a <link linkend="GladeSignal"><type>GladeSignal</type></link> on <parameter>widget</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>old_signal_handler</parameter>&nbsp;:</term>
<listitem><simpara> the old <link linkend="GladeSignal"><type>GladeSignal</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_signal_handler</parameter>&nbsp;:</term>
<listitem><simpara> the new <link linkend="GladeSignal"><type>GladeSignal</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-list-signal-handlers"/>glade_widget_list_signal_handlers ()</title>
<indexterm><primary>glade_widget_list_signal_handlers</primary></indexterm><programlisting><link linkend="GPtrArray">GPtrArray</link>*  glade_widget_list_signal_handlers
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *signal_name);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>signal_name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the signal
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A <link linkend="GPtrArray"><type>GPtrArray</type></link> of <link linkend="GladeSignal"><type>GladeSignal</type></link> for <parameter>signal_name</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-write"/>glade_widget_write ()</title>
<indexterm><primary>glade_widget_write</primary></indexterm><programlisting><link linkend="GladeWidgetInfo">GladeWidgetInfo</link>* glade_widget_write         (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeInterface">GladeInterface</link> *interface);</programlisting>
<para>
TODO: write me</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>interface</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeInterface"><type>GladeInterface</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-read"/>glade_widget_read ()</title>
<indexterm><primary>glade_widget_read</primary></indexterm><programlisting><link linkend="GladeWidget">GladeWidget</link>* glade_widget_read              (<link linkend="GladeProject">GladeProject</link> *project,
                                             <link linkend="GladeWidgetInfo">GladeWidgetInfo</link> *info);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeProject"><type>GladeProject</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidgetInfo"><type>GladeWidgetInfo</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GladeWidget"><type>GladeWidget</type></link> for <parameter>project</parameter>, based on <parameter>info</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-has-launcher"/>glade_widget_has_launcher ()</title>
<indexterm><primary>glade_widget_has_launcher</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_has_launcher       (<link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-launch-editor"/>glade_widget_launch_editor ()</title>
<indexterm><primary>glade_widget_launch_editor</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_launch_editor      (<link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
Launches a custom editor from the backend for thie widget.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-get-parent"/>glade_widget_get_parent ()</title>
<indexterm><primary>glade_widget_get_parent</primary></indexterm><programlisting><link linkend="GladeWidget">GladeWidget</link>* glade_widget_get_parent        (<link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The parenting <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-set-parent"/>glade_widget_set_parent ()</title>
<indexterm><primary>glade_widget_set_parent</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_set_parent         (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             <link linkend="GladeWidget">GladeWidget</link> *parent);</programlisting>
<para>
sets the parenting <link linkend="GladeWidget"><type>GladeWidget</type></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent</parameter>&nbsp;:</term>
<listitem><simpara> the parenting <link linkend="GladeWidget"><type>GladeWidget</type></link> (or <literal>NULL</literal>)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-event-widget"/>glade_widget_event_widget ()</title>
<indexterm><primary>glade_widget_event_widget</primary></indexterm><programlisting><link linkend="GladeWidget">GladeWidget</link>* glade_widget_event_widget      (void);</programlisting>
<para>
During events, this function returns the deepest
project widget at moust position, or <literal>NULL</literal> if it is
not a mouse event.
</para>
<para>
Handle with care, you must be in an event for 
the return value to be meaningfull</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-superuser"/>glade_widget_superuser ()</title>
<indexterm><primary>glade_widget_superuser</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_widget_superuser          (void);</programlisting>
<para>
Checks if we are in superuser mode.
</para>
<para>
Superuser mode is when we are
  - Loading a project
  - Dupping a widget recursively
  - Rebuilding an instance for a construct-only property
</para>
<para>
In these cases, we must act like a load, this should be checked
from the plugin when implementing containers, when undo/redo comes
around, the plugin is responsable for maintaining the same container
size when widgets are added/removed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-widget-push-superuser"/>glade_widget_push_superuser ()</title>
<indexterm><primary>glade_widget_push_superuser</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_push_superuser     (void);</programlisting>
<para>
Sets superuser mode</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="glade-widget-pop-superuser"/>glade_widget_pop_superuser ()</title>
<indexterm><primary>glade_widget_pop_superuser</primary></indexterm><programlisting><link linkend="void">void</link>        glade_widget_pop_superuser      (void);</programlisting>
<para>
Unsets superuser mode</para>
<para>

</para></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<refsect2><title><anchor id="GladeWidget--anarchist"/>The &quot;<literal>anarchist</literal>&quot; property</title>
<programlisting>  &quot;anarchist&quot;            <link linkend="gboolean">gboolean</link>              : Read / Write / Construct Only</programlisting>
<para>Whether this composite child is an ancestral child or an anarchist child.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GladeWidget--class"/>The &quot;<literal>class</literal>&quot; property</title>
<programlisting>  &quot;class&quot;                <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only</programlisting>
<para>The class of the associated gtk+ widget.</para></refsect2>
<refsect2><title><anchor id="GladeWidget--info"/>The &quot;<literal>info</literal>&quot; property</title>
<programlisting>  &quot;info&quot;                 <link linkend="gpointer">gpointer</link>              : Write / Construct Only</programlisting>
<para>A GladeWidgetInfo struct to base a new widget on.</para></refsect2>
<refsect2><title><anchor id="GladeWidget--internal"/>The &quot;<literal>internal</literal>&quot; property</title>
<programlisting>  &quot;internal&quot;             <link linkend="gchararray">gchararray</link>            : Read / Write / Construct</programlisting>
<para>The internal name of the widget.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GladeWidget--internal-name"/>The &quot;<literal>internal-name</literal>&quot; property</title>
<programlisting>  &quot;internal-name&quot;        <link linkend="gchararray">gchararray</link>            : Write / Construct Only</programlisting>
<para>A generic name prefix for internal widgets.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GladeWidget--name"/>The &quot;<literal>name</literal>&quot; property</title>
<programlisting>  &quot;name&quot;                 <link linkend="gchararray">gchararray</link>            : Read / Write / Construct</programlisting>
<para>The name of the widget.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GladeWidget--object"/>The &quot;<literal>object</literal>&quot; property</title>
<programlisting>  &quot;object&quot;               <link linkend="GObject">GObject</link>               : Read / Write / Construct</programlisting>
<para>The object associated.</para></refsect2>
<refsect2><title><anchor id="GladeWidget--parent"/>The &quot;<literal>parent</literal>&quot; property</title>
<programlisting>  &quot;parent&quot;               <link linkend="GladeWidget">GladeWidget</link>           : Read / Write / Construct</programlisting>
<para>A pointer to the parenting GladeWidget.</para></refsect2>
<refsect2><title><anchor id="GladeWidget--project"/>The &quot;<literal>project</literal>&quot; property</title>
<programlisting>  &quot;project&quot;              <link linkend="GladeProject">GladeProject</link>          : Read / Write / Construct</programlisting>
<para>The glade project that this widget belongs to.</para></refsect2>
<refsect2><title><anchor id="GladeWidget--properties"/>The &quot;<literal>properties</literal>&quot; property</title>
<programlisting>  &quot;properties&quot;           <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only</programlisting>
<para>A list of GladeProperties.</para></refsect2>
<refsect2><title><anchor id="GladeWidget--reason"/>The &quot;<literal>reason</literal>&quot; property</title>
<programlisting>  &quot;reason&quot;               <link linkend="gint">gint</link>                  : Write / Construct Only</programlisting>
<para>A GladeCreateReason for this creation.</para><para>Allowed values: [0,3]</para>
<para>Default value: 0</para>
</refsect2>
<refsect2><title><anchor id="GladeWidget--template"/>The &quot;<literal>template</literal>&quot; property</title>
<programlisting>  &quot;template&quot;             <link linkend="GladeWidget">GladeWidget</link>           : Write / Construct Only</programlisting>
<para>A GladeWidget template to base a new widget on.</para></refsect2>

</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GladeWidget-add-signal-handler"/>The &quot;add-signal-handler&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="gpointer">gpointer</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladewidget</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeSignal"><type>GladeSignal</type></link> that was added to <parameter>gladewidget</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeWidget-button-press-event"/>The &quot;button-press-event&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="GdkEventButton">GdkEventButton</link> *arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladewidget</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkEvent"><type>GdkEvent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeWidget-button-release-event"/>The &quot;button-release-event&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="GdkEventButton">GdkEventButton</link> *event,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladewidget</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeWidget-change-signal-handler"/>The &quot;change-signal-handler&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="gpointer">gpointer</link> arg1,
                                            <link linkend="gpointer">gpointer</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladewidget</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the old <link linkend="GladeSignal"><type>GladeSignal</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara> the new <link linkend="GladeSignal"><type>GladeSignal</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeWidget-enter-notify-event"/>The &quot;enter-notify-event&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="GdkEventCrossing">GdkEventCrossing</link> *arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladewidget</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkEvent"><type>GdkEvent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeWidget-motion-notify-event"/>The &quot;motion-notify-event&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="GdkEventMotion">GdkEventMotion</link> *arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladewidget</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkEvent"><type>GdkEvent</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeWidget-remove-signal-handler"/>The &quot;remove-signal-handler&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GladeWidget">GladeWidget</link> *gladewidget,
                                            <link linkend="gpointer">gpointer</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladewidget</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeWidget"><type>GladeWidget</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeSignal"><type>GladeSignal</type></link> that was removed from <parameter>gladewidget</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
