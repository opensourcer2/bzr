<refentry id="GladeEditorProperty">
<refmeta>
<refentrytitle>GladeEditorProperty</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GLADEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GladeEditorProperty</refname><refpurpose>A generic widget to edit a <link linkend="GladeProperty"><type>GladeProperty</type></link></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;glade.h&gt;


            <link linkend="GladeEditorProperty-struct">GladeEditorProperty</link>;
<link linkend="GladeEditorProperty">GladeEditorProperty</link>* <link linkend="glade-editor-property-new">glade_editor_property_new</link>
                                            (<link linkend="GladePropertyClass">GladePropertyClass</link> *class,
                                             <link linkend="gboolean">gboolean</link> use_command);
<link linkend="void">void</link>        <link linkend="glade-editor-property-load">glade_editor_property_load</link>      (<link linkend="GladeEditorProperty">GladeEditorProperty</link> *eprop,
                                             <link linkend="GladeProperty">GladeProperty</link> *property);
<link linkend="void">void</link>        <link linkend="glade-editor-property-load-by-widget">glade_editor_property_load_by_widget</link>
                                            (<link linkend="GladeEditorProperty">GladeEditorProperty</link> *eprop,
                                             <link linkend="GladeWidget">GladeWidget</link> *widget);
<link linkend="gboolean">gboolean</link>    <link linkend="glade-editor-property-supported">glade_editor_property_supported</link> (<link linkend="GParamSpec">GParamSpec</link> *pspec);
<link linkend="GladeEditorProperty">GladeEditorProperty</link>* <link linkend="glade-editor-property-new-from-widget">glade_editor_property_new_from_widget</link>
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *property,
                                             <link linkend="gboolean">gboolean</link> use_command);
<link linkend="void">void</link>        <link linkend="glade-editor-property-hide-info">glade_editor_property_hide_info</link> (<link linkend="GladeEditorProperty">GladeEditorProperty</link> *eprop);
<link linkend="void">void</link>        <link linkend="glade-editor-property-show-info">glade_editor_property_show_info</link> (<link linkend="GladeEditorProperty">GladeEditorProperty</link> *eprop);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----<link linkend="GtkBox">GtkBox</link>
                           +----<link linkend="GtkHBox">GtkHBox</link>
                                 +----GladeEditorProperty
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
GladeEditorProperty implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>


<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GladeEditorProperty--property-class">property-class</link>&quot;       <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only
  &quot;<link linkend="GladeEditorProperty--show-info">show-info</link>&quot;            <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GladeEditorProperty--use-command">use-command</link>&quot;          <link linkend="gboolean">gboolean</link>              : Read / Write
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GladeEditorProperty-gtk-doc-search">gtk-doc-search</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="GladeEditorProperty">GladeEditorProperty</link> *gladeeditor,
                                            <link linkend="gchar">gchar</link> *arg1,
                                            <link linkend="gchar">gchar</link> *arg2,
                                            <link linkend="gchar">gchar</link> *arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
The <link linkend="GladeEditorProperty"><type>GladeEditorProperty</type></link> is a factory that will create the correct
control for the <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link> it was created for and provides
a simple unified api to them.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GladeEditorProperty-struct"/>GladeEditorProperty</title>
<indexterm><primary>GladeEditorProperty</primary></indexterm><programlisting>typedef struct _GladeEditorProperty GladeEditorProperty;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="glade-editor-property-new"/>glade_editor_property_new ()</title>
<indexterm><primary>glade_editor_property_new</primary></indexterm><programlisting><link linkend="GladeEditorProperty">GladeEditorProperty</link>* glade_editor_property_new
                                            (<link linkend="GladePropertyClass">GladePropertyClass</link> *class,
                                             <link linkend="gboolean">gboolean</link> use_command);</programlisting>
<para>
This is a factory function to create the correct type of
editor property that can edit the said type of <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>class</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_command</parameter>&nbsp;:</term>
<listitem><simpara> Whether the undo/redo stack applies here.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly created GladeEditorProperty of the correct type
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-property-load"/>glade_editor_property_load ()</title>
<indexterm><primary>glade_editor_property_load</primary></indexterm><programlisting><link linkend="void">void</link>        glade_editor_property_load      (<link linkend="GladeEditorProperty">GladeEditorProperty</link> *eprop,
                                             <link linkend="GladeProperty">GladeProperty</link> *property);</programlisting>
<para>
Loads <parameter>property</parameter> values into <parameter>eprop</parameter> and connects.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>eprop</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeEditorProperty"><type>GladeEditorProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeProperty"><type>GladeProperty</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-property-load-by-widget"/>glade_editor_property_load_by_widget ()</title>
<indexterm><primary>glade_editor_property_load_by_widget</primary></indexterm><programlisting><link linkend="void">void</link>        glade_editor_property_load_by_widget
                                            (<link linkend="GladeEditorProperty">GladeEditorProperty</link> *eprop,
                                             <link linkend="GladeWidget">GladeWidget</link> *widget);</programlisting>
<para>
Convenience function to load the appropriate <link linkend="GladeProperty"><type>GladeProperty</type></link> into
<parameter>eprop</parameter> from <parameter>widget</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>eprop</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeEditorProperty"><type>GladeEditorProperty</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-property-supported"/>glade_editor_property_supported ()</title>
<indexterm><primary>glade_editor_property_supported</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    glade_editor_property_supported (<link linkend="GParamSpec">GParamSpec</link> *pspec);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pspec</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GParamSpec"><type>GParamSpec</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether this pspec is supported by GladeEditorProperties.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-property-new-from-widget"/>glade_editor_property_new_from_widget ()</title>
<indexterm><primary>glade_editor_property_new_from_widget</primary></indexterm><programlisting><link linkend="GladeEditorProperty">GladeEditorProperty</link>* glade_editor_property_new_from_widget
                                            (<link linkend="GladeWidget">GladeWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *property,
                                             <link linkend="gboolean">gboolean</link> use_command);</programlisting>
<para>
This is a convenience function to create a GladeEditorProperty corresponding
to <parameter>property</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> The widget's property
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_command</parameter>&nbsp;:</term>
<listitem><simpara> Whether the undo/redo stack applies here.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly created and connected GladeEditorProperty
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-property-hide-info"/>glade_editor_property_hide_info ()</title>
<indexterm><primary>glade_editor_property_hide_info</primary></indexterm><programlisting><link linkend="void">void</link>        glade_editor_property_hide_info (<link linkend="GladeEditorProperty">GladeEditorProperty</link> *eprop);</programlisting>
<para>
Hide the control widget to access help for <parameter>eprop</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>eprop</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeEditorProperty"><type>GladeEditorProperty</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="glade-editor-property-show-info"/>glade_editor_property_show_info ()</title>
<indexterm><primary>glade_editor_property_show_info</primary></indexterm><programlisting><link linkend="void">void</link>        glade_editor_property_show_info (<link linkend="GladeEditorProperty">GladeEditorProperty</link> *eprop);</programlisting>
<para>
Show the control widget to access help for <parameter>eprop</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>eprop</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladeEditorProperty"><type>GladeEditorProperty</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<refsect2><title><anchor id="GladeEditorProperty--property-class"/>The &quot;<literal>property-class</literal>&quot; property</title>
<programlisting>  &quot;property-class&quot;       <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only</programlisting>
<para>The GladePropertyClass this GladeEditorProperty was created for.</para></refsect2>
<refsect2><title><anchor id="GladeEditorProperty--show-info"/>The &quot;<literal>show-info</literal>&quot; property</title>
<programlisting>  &quot;show-info&quot;            <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>Whether we should show an informational button.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GladeEditorProperty--use-command"/>The &quot;<literal>use-command</literal>&quot; property</title>
<programlisting>  &quot;use-command&quot;          <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>Whether we should use the command API for the undo/redo stack.</para><para>Default value: FALSE</para>
</refsect2>

</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GladeEditorProperty-gtk-doc-search"/>The &quot;gtk-doc-search&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GladeEditorProperty">GladeEditorProperty</link> *gladeeditor,
                                            <link linkend="gchar">gchar</link> *arg1,
                                            <link linkend="gchar">gchar</link> *arg2,
                                            <link linkend="gchar">gchar</link> *arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Emitted when the editor property requests that a doc-search be performed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladeeditor</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeEditorProperty"><type>GladeEditorProperty</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the (<link linkend="gchar"><type>gchar</type></link> *) book to search or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara> the (<link linkend="gchar"><type>gchar</type></link> *) page to search or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara> the (<link linkend="gchar"><type>gchar</type></link> *) search string or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
