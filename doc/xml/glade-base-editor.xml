<refentry id="gladeui-GladeBaseEditor">
<refmeta>
<refentrytitle role="top_of_page" id="gladeui-GladeBaseEditor.top_of_page">GladeBaseEditor</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GLADEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GladeBaseEditor</refname>
<refpurpose>A customisable editor</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="gladeui-GladeBaseEditor.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="GladeBaseEditorPrivate">GladeBaseEditorPrivate</link>;
                    <link linkend="GladeBaseEditor">GladeBaseEditor</link>;
<link linkend="GladeBaseEditor">GladeBaseEditor</link>*    <link linkend="glade-base-editor-new">glade_base_editor_new</link>               (<link linkend="GObject">GObject</link> *container,
                                                         <link linkend="gboolean">gboolean</link> tree_like,
                                                         ...);
<link linkend="void">void</link>                <link linkend="glade-base-editor-add-default-properties">glade_base_editor_add_default_properties</link>
                                                        (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         <link linkend="GladeWidget">GladeWidget</link> *gchild);
<link linkend="void">void</link>                <link linkend="glade-base-editor-add-properties">glade_base_editor_add_properties</link>    (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         <link linkend="GladeWidget">GladeWidget</link> *gchild,
                                                         <link linkend="gboolean">gboolean</link> packing,
                                                         ...);
<link linkend="void">void</link>                <link linkend="glade-base-editor-add-label">glade_base_editor_add_label</link>         (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         <link linkend="gchar">gchar</link> *str);
<link linkend="void">void</link>                <link linkend="glade-base-editor-add-popup-items">glade_base_editor_add_popup_items</link>   (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         ...);
<link linkend="void">void</link>                <link linkend="glade-base-editor-set-show-signal-editor">glade_base_editor_set_show_signal_editor</link>
                                                        (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         <link linkend="gboolean">gboolean</link> val);
<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="glade-base-editor-pack-new-window">glade_base_editor_pack_new_window</link>   (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         <link linkend="gchar">gchar</link> *title,
                                                         <link linkend="gchar">gchar</link> *help_markup);
</synopsis>
</refsynopsisdiv>









<refsect1 id="gladeui-GladeBaseEditor.description" role="desc">
<title role="desc.title">Description</title>
<para>
Convenience object to edit containers where placeholders do not make sense, like GtkMenubar.</para>
<para>

</para>
</refsect1>

<refsect1 id="gladeui-GladeBaseEditor.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GladeBaseEditorPrivate" role="struct">
<title>GladeBaseEditorPrivate</title>
<indexterm zone="GladeBaseEditorPrivate"><primary>GladeBaseEditorPrivate</primary></indexterm><programlisting>typedef struct _GladeBaseEditorPrivate GladeBaseEditorPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2 id="GladeBaseEditor" role="struct">
<title>GladeBaseEditor</title>
<indexterm zone="GladeBaseEditor"><primary>GladeBaseEditor</primary></indexterm><programlisting>typedef struct {
	GtkVBox parent;

	GladeBaseEditorPrivate *priv;
} GladeBaseEditor;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="glade-base-editor-new" role="function">
<title>glade_base_editor_new ()</title>
<indexterm zone="glade-base-editor-new"><primary>glade_base_editor_new</primary></indexterm><programlisting><link linkend="GladeBaseEditor">GladeBaseEditor</link>*    glade_base_editor_new               (<link linkend="GObject">GObject</link> *container,
                                                         <link linkend="gboolean">gboolean</link> tree_like,
                                                         ...);</programlisting>
<para>
Creates a new GladeBaseEditor with support for all the object types indicated
in the variable argument list.
Argument List:
  o The type name
  o The GType the editor will support</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>container</parameter>&nbsp;:</term>
<listitem><simpara> the container this new editor will edit.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tree_like</parameter>&nbsp;:</term>
<listitem><simpara> TRUE if container's children can have children.
@... A NULL terminated list of gchar *, GType
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>a new GladeBaseEditor.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-base-editor-add-default-properties" role="function">
<title>glade_base_editor_add_default_properties ()</title>
<indexterm zone="glade-base-editor-add-default-properties"><primary>glade_base_editor_add_default_properties</primary></indexterm><programlisting><link linkend="void">void</link>                glade_base_editor_add_default_properties
                                                        (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         <link linkend="GladeWidget">GladeWidget</link> *gchild);</programlisting>
<para>
Add <parameter>gchild</parameter> name and type property to <parameter>editor</parameter>
</para>
<para>
NOTE: This function is intended to be used in "child-selected" callbacks</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeBaseEditor"><type>GladeBaseEditor</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gchild</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-base-editor-add-properties" role="function">
<title>glade_base_editor_add_properties ()</title>
<indexterm zone="glade-base-editor-add-properties"><primary>glade_base_editor_add_properties</primary></indexterm><programlisting><link linkend="void">void</link>                glade_base_editor_add_properties    (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         <link linkend="GladeWidget">GladeWidget</link> *gchild,
                                                         <link linkend="gboolean">gboolean</link> packing,
                                                         ...);</programlisting>
<para>
Add <parameter>gchild</parameter> properties to <parameter>editor</parameter>
</para>
<para>
NOTE: This function is intended to be used in "child-selected" callbacks</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeBaseEditor"><type>GladeBaseEditor</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>gchild</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>packing</parameter>&nbsp;:</term>
<listitem><simpara> whether we are adding packing properties or not
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> A NULL terminated list of properties names.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-base-editor-add-label" role="function">
<title>glade_base_editor_add_label ()</title>
<indexterm zone="glade-base-editor-add-label"><primary>glade_base_editor_add_label</primary></indexterm><programlisting><link linkend="void">void</link>                glade_base_editor_add_label         (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         <link linkend="gchar">gchar</link> *str);</programlisting>
<para>
Adds a new label to <parameter>editor</parameter>
</para>
<para>
NOTE: This function is intended to be used in "child-selected" callbacks</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeBaseEditor"><type>GladeBaseEditor</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>str</parameter>&nbsp;:</term>
<listitem><simpara> the label string
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-base-editor-add-popup-items" role="function">
<title>glade_base_editor_add_popup_items ()</title>
<indexterm zone="glade-base-editor-add-popup-items"><primary>glade_base_editor_add_popup_items</primary></indexterm><programlisting><link linkend="void">void</link>                glade_base_editor_add_popup_items   (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         ...);</programlisting>
<para>
Adds a new popup item to the editor.
Three parameters are needed for each new popup item:
 o the popup item's label
 o the object type this popup item will create
 o whether this popup item will add the new object as child</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeBaseEditor"><type>GladeBaseEditor</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> a NULL terminated list of gchar *, <link linkend="GType"><type>GType</type></link>, gboolean
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-base-editor-set-show-signal-editor" role="function">
<title>glade_base_editor_set_show_signal_editor ()</title>
<indexterm zone="glade-base-editor-set-show-signal-editor"><primary>glade_base_editor_set_show_signal_editor</primary></indexterm><programlisting><link linkend="void">void</link>                glade_base_editor_set_show_signal_editor
                                                        (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         <link linkend="gboolean">gboolean</link> val);</programlisting>
<para>
Shows/hide <parameter>editor</parameter> 's signal editor</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeBaseEditor"><type>GladeBaseEditor</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-base-editor-pack-new-window" role="function">
<title>glade_base_editor_pack_new_window ()</title>
<indexterm zone="glade-base-editor-pack-new-window"><primary>glade_base_editor_pack_new_window</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          glade_base_editor_pack_new_window   (<link linkend="GladeBaseEditor">GladeBaseEditor</link> *editor,
                                                         <link linkend="gchar">gchar</link> *title,
                                                         <link linkend="gchar">gchar</link> *help_markup);</programlisting>
<para>
This convenience function create a new modal window and packs <parameter>editor</parameter> in it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>editor</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladeBaseEditor"><type>GladeBaseEditor</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&nbsp;:</term>
<listitem><simpara> the window title
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>help_markup</parameter>&nbsp;:</term>
<listitem><simpara> the help text
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>the newly created window
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
