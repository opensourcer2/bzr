<refentry id="GladeFixed">
<refmeta>
<refentrytitle role="top_of_page">GladeFixed</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GLADEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GladeFixed</refname>
<refpurpose>An object wrapper for free-form placement container widgets</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gladeui/glade.h&gt;


            <link linkend="GladeFixed-struct">GladeFixed</link>;
#define     <link linkend="GLADE-FIXED-CURSOR-BOTTOM:CAPS">GLADE_FIXED_CURSOR_BOTTOM</link>       (type)
#define     <link linkend="GLADE-FIXED-CURSOR-RIGHT:CAPS">GLADE_FIXED_CURSOR_RIGHT</link>        (type)
#define     <link linkend="GLADE-FIXED-CURSOR-TOP:CAPS">GLADE_FIXED_CURSOR_TOP</link>          (type)
#define     <link linkend="GLADE-FIXED-CURSOR-LEFT:CAPS">GLADE_FIXED_CURSOR_LEFT</link>         (type)

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GladeWidget">GladeWidget</link>
         +----GladeFixed
</synopsis>

</refsect1>





<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="GladeFixed--can-resize">can-resize</link>&quot;           <link linkend="gboolean">gboolean</link>              : Read / Write / Construct
  &quot;<link linkend="GladeFixed--height-prop">height-prop</link>&quot;          <link linkend="gchararray">gchararray</link>            : Read / Write / Construct
  &quot;<link linkend="GladeFixed--width-prop">width-prop</link>&quot;           <link linkend="gchararray">gchararray</link>            : Read / Write / Construct
  &quot;<link linkend="GladeFixed--x-prop">x-prop</link>&quot;               <link linkend="gchararray">gchararray</link>            : Read / Write / Construct
  &quot;<link linkend="GladeFixed--y-prop">y-prop</link>&quot;               <link linkend="gchararray">gchararray</link>            : Read / Write / Construct
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

&quot;<link linkend="GladeFixed-configure-begin">configure-begin</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GladeFixed">GladeFixed</link> *gladewidget,
                                            <link linkend="GObject">GObject</link>    *arg1,
                                            <link linkend="gpointer">gpointer</link>    user_data)        : Run last
&quot;<link linkend="GladeFixed-configure-child">configure-child</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GladeFixed">GladeFixed</link> *gladewidget,
                                            <link linkend="GObject">GObject</link>    *arg1,
                                            <link linkend="gpointer">gpointer</link>    arg2,
                                            <link linkend="gpointer">gpointer</link>    user_data)        : Run last
&quot;<link linkend="GladeFixed-configure-end">configure-end</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GladeFixed">GladeFixed</link> *gladewidget,
                                            <link linkend="GObject">GObject</link>    *arg1,
                                            <link linkend="gpointer">gpointer</link>    user_data)        : Run last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="GladeFixed"><type>GladeFixed</type></link> is a specialized <link linkend="GladeWidget"><type>GladeWidget</type></link> to handle free-form child
placements in containers that support this, it is designed with properties
and signals with flexable integration in mind.
</para>

<para>
If you set the x-prop/y-prop/width-prop/height-prop properties and
leave the signals alone, <link linkend="GladeFixed"><type>GladeFixed</type></link> will assume you are like a 
GtkFixed/GtkLayout widget and will use pixel counts as units for
these properties.
</para>

<para>
If you handle the configure-child/configure-end[/configure-begin] signals
and dont let them propagate to the GladeFixed, then the x-prop/y-prop/width-prop/height-prop
properties will be completely ignored and it is up to the implementor to play
with whatever child packing properties are available to make a closest match
for the values passed to configure-child via the <link linkend="GdkRectangle"><type>GdkRectangle</type></link>.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GladeFixed-struct" role="struct"/>GladeFixed</title>
<indexterm><primary>GladeFixed</primary></indexterm><programlisting>typedef struct _GladeFixed GladeFixed;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GLADE-FIXED-CURSOR-BOTTOM:CAPS" role="macro"/>GLADE_FIXED_CURSOR_BOTTOM()</title>
<indexterm><primary>GLADE_FIXED_CURSOR_BOTTOM</primary></indexterm><programlisting>#define     GLADE_FIXED_CURSOR_BOTTOM(type)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GLADE-FIXED-CURSOR-RIGHT:CAPS" role="macro"/>GLADE_FIXED_CURSOR_RIGHT()</title>
<indexterm><primary>GLADE_FIXED_CURSOR_RIGHT</primary></indexterm><programlisting>#define     GLADE_FIXED_CURSOR_RIGHT(type)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GLADE-FIXED-CURSOR-TOP:CAPS" role="macro"/>GLADE_FIXED_CURSOR_TOP()</title>
<indexterm><primary>GLADE_FIXED_CURSOR_TOP</primary></indexterm><programlisting>#define     GLADE_FIXED_CURSOR_TOP(type)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GLADE-FIXED-CURSOR-LEFT:CAPS" role="macro"/>GLADE_FIXED_CURSOR_LEFT()</title>
<indexterm><primary>GLADE_FIXED_CURSOR_LEFT</primary></indexterm><programlisting>#define     GLADE_FIXED_CURSOR_LEFT(type)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="GladeFixed--can-resize"/>The &quot;<literal>can-resize</literal>&quot; property</title>
<indexterm><primary>GladeFixed:can-resize</primary></indexterm><programlisting>  &quot;can-resize&quot;           <link linkend="gboolean">gboolean</link>              : Read / Write / Construct</programlisting>
<para>Whether this container supports resizes of child widgets.</para><para>Default value: TRUE</para>
</refsect2>
<refsect2><title><anchor id="GladeFixed--height-prop"/>The &quot;<literal>height-prop</literal>&quot; property</title>
<indexterm><primary>GladeFixed:height-prop</primary></indexterm><programlisting>  &quot;height-prop&quot;          <link linkend="gchararray">gchararray</link>            : Read / Write / Construct</programlisting>
<para>The property used to set the height of a child object.</para><para>Default value: "height-request"</para>
</refsect2>
<refsect2><title><anchor id="GladeFixed--width-prop"/>The &quot;<literal>width-prop</literal>&quot; property</title>
<indexterm><primary>GladeFixed:width-prop</primary></indexterm><programlisting>  &quot;width-prop&quot;           <link linkend="gchararray">gchararray</link>            : Read / Write / Construct</programlisting>
<para>The property used to set the width of a child object.</para><para>Default value: "width-request"</para>
</refsect2>
<refsect2><title><anchor id="GladeFixed--x-prop"/>The &quot;<literal>x-prop</literal>&quot; property</title>
<indexterm><primary>GladeFixed:x-prop</primary></indexterm><programlisting>  &quot;x-prop&quot;               <link linkend="gchararray">gchararray</link>            : Read / Write / Construct</programlisting>
<para>The property used to set the X position of a child object.</para><para>Default value: "x"</para>
</refsect2>
<refsect2><title><anchor id="GladeFixed--y-prop"/>The &quot;<literal>y-prop</literal>&quot; property</title>
<indexterm><primary>GladeFixed:y-prop</primary></indexterm><programlisting>  &quot;y-prop&quot;               <link linkend="gchararray">gchararray</link>            : Read / Write / Construct</programlisting>
<para>The property used to set the Y position of a child object.</para><para>Default value: "y"</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GladeFixed-configure-begin"/>The &quot;configure-begin&quot; signal</title>
<indexterm><primary>GladeFixed::configure-begin</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GladeFixed">GladeFixed</link> *gladewidget,
                                            <link linkend="GObject">GObject</link>    *arg1,
                                            <link linkend="gpointer">gpointer</link>    user_data)        : Run last</programlisting>
<para>
Signals the beginning of a Drag/Resize</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladewidget</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeFixed"><type>GladeFixed</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the child <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> means you have handled the event and cancels the
         default handler from being triggered.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeFixed-configure-child"/>The &quot;configure-child&quot; signal</title>
<indexterm><primary>GladeFixed::configure-child</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GladeFixed">GladeFixed</link> *gladewidget,
                                            <link linkend="GObject">GObject</link>    *arg1,
                                            <link linkend="gpointer">gpointer</link>    arg2,
                                            <link linkend="gpointer">gpointer</link>    user_data)        : Run last</programlisting>
<para>
Delegates the Drag/Resize job.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladewidget</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeFixed"><type>GladeFixed</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the child <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="GdkRectange"><type>GdkRectange</type></link> describing the new size.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> means you have handled the event and cancels the
         default handler from being triggered.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GladeFixed-configure-end"/>The &quot;configure-end&quot; signal</title>
<indexterm><primary>GladeFixed::configure-end</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GladeFixed">GladeFixed</link> *gladewidget,
                                            <link linkend="GObject">GObject</link>    *arg1,
                                            <link linkend="gpointer">gpointer</link>    user_data)        : Run last</programlisting>
<para>
Signals the end of a Drag/Resize</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gladewidget</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GladeFixed"><type>GladeFixed</type></link> which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara> the child <link linkend="GladeWidget"><type>GladeWidget</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> means you have handled the event and cancels the
         default handler from being triggered.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
