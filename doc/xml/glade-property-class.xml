<refentry id="gladeui-GladePropertyClass">
<refmeta>
<refentrytitle role="top_of_page" id="gladeui-GladePropertyClass.top_of_page">GladePropertyClass</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GLADEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GladePropertyClass</refname>
<refpurpose>Property Class-wide metadata.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="gladeui-GladePropertyClass.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="GPC-OBJECT-DELIMITER:CAPS">GPC_OBJECT_DELIMITER</link>
#define             <link linkend="GPC-PROPERTY-NAMELEN:CAPS">GPC_PROPERTY_NAMELEN</link>
enum                <link linkend="GPCType">GPCType</link>;
<link linkend="GladePropertyClass">GladePropertyClass</link>* <link linkend="glade-property-class-new">glade_property_class_new</link>            (<link linkend="gpointer">gpointer</link> handle);
<link linkend="GladePropertyClass">GladePropertyClass</link>* <link linkend="glade-property-class-new-from-spec">glade_property_class_new_from_spec</link>  (<link linkend="gpointer">gpointer</link> handle,
                                                         <link linkend="GParamSpec">GParamSpec</link> *spec);
<link linkend="GList">GList</link>*              <link linkend="glade-property-class-list-atk-relations">glade_property_class_list_atk_relations</link>
                                                        (<link linkend="gpointer">gpointer</link> handle,
                                                         <link linkend="GType">GType</link> owner_type);
<link linkend="GladePropertyClass">GladePropertyClass</link>* <link linkend="glade-property-class-accel-property">glade_property_class_accel_property</link> (<link linkend="gpointer">gpointer</link> handle,
                                                         <link linkend="GType">GType</link> owner_type);
<link linkend="GladePropertyClass">GladePropertyClass</link>* <link linkend="glade-property-class-clone">glade_property_class_clone</link>          (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class);
<link linkend="void">void</link>                <link linkend="glade-property-class-free">glade_property_class_free</link>           (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-class-is-visible">glade_property_class_is_visible</link>     (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-class-is-object">glade_property_class_is_object</link>      (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class);
<link linkend="GValue">GValue</link>*             <link linkend="glade-property-class-make-gvalue-from-string">glade_property_class_make_gvalue_from_string</link>
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class,
                                                         const <link linkend="gchar">gchar</link> *string,
                                                         <link linkend="GladeProject">GladeProject</link> *project);
<link linkend="gchar">gchar</link>*              <link linkend="glade-property-class-make-string-from-gvalue">glade_property_class_make_string_from_gvalue</link>
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class,
                                                         const <link linkend="GValue">GValue</link> *value);
<link linkend="GValue">GValue</link>*             <link linkend="glade-property-class-make-gvalue-from-vl">glade_property_class_make_gvalue_from_vl</link>
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class,
                                                         <link linkend="va-list">va_list</link> vl);
<link linkend="void">void</link>                <link linkend="glade-property-class-set-vl-from-gvalue">glade_property_class_set_vl_from_gvalue</link>
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="GValue">GValue</link> *value,
                                                         <link linkend="va-list">va_list</link> vl);
<link linkend="GValue">GValue</link>*             <link linkend="glade-property-class-make-gvalue">glade_property_class_make_gvalue</link>    (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         ...);
<link linkend="void">void</link>                <link linkend="glade-property-class-get-from-gvalue">glade_property_class_get_from_gvalue</link>
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="GValue">GValue</link> *value,
                                                         ...);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-class-update-from-node">glade_property_class_update_from_node</link>
                                                        (<link linkend="GladeXmlNode">GladeXmlNode</link> *node,
                                                         <link linkend="GModule">GModule</link> *module,
                                                         <link linkend="GType">GType</link> object_type,
                                                         <link linkend="GladePropertyClass">GladePropertyClass</link> **property_class,
                                                         const <link linkend="gchar">gchar</link> *domain);
const <link linkend="gchar">gchar</link>*        <link linkend="glade-property-class-get-displayable-value">glade_property_class_get_displayable_value</link>
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="gint">gint</link> value);
<link linkend="GtkAdjustment">GtkAdjustment</link>*      <link linkend="glade-property-class-make-adjustment">glade_property_class_make_adjustment</link>
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-class-match">glade_property_class_match</link>          (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="GladePropertyClass">GladePropertyClass</link> *comp);
<link linkend="gboolean">gboolean</link>            <link linkend="glade-property-class-void-value">glade_property_class_void_value</link>     (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="GValue">GValue</link> *value);
const <link linkend="gchar">gchar</link>*        <link linkend="glade-property-class-atk-realname">glade_property_class_atk_realname</link>   (const <link linkend="gchar">gchar</link> *atk_name);
</synopsis>
</refsynopsisdiv>









<refsect1 id="gladeui-GladePropertyClass.description" role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="GladePropertyClass"><type>GladePropertyClass</type></link> is a structure based on a <link linkend="GParamSpec"><type>GParamSpec</type></link> and parameters
from the Glade catalog files and describes how properties are to be handled
in Glade; it also provides an interface to convert <link linkend="GValue"><type>GValue</type></link> to strings and
va_lists etc (back and forth).</para>
<para>

</para>
</refsect1>

<refsect1 id="gladeui-GladePropertyClass.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GPC-OBJECT-DELIMITER:CAPS" role="macro">
<title>GPC_OBJECT_DELIMITER</title>
<indexterm zone="GPC-OBJECT-DELIMITER:CAPS"><primary>GPC_OBJECT_DELIMITER</primary></indexterm><programlisting>#define GPC_OBJECT_DELIMITER ", "
</programlisting>
<para>

</para></refsect2>
<refsect2 id="GPC-PROPERTY-NAMELEN:CAPS" role="macro">
<title>GPC_PROPERTY_NAMELEN</title>
<indexterm zone="GPC-PROPERTY-NAMELEN:CAPS"><primary>GPC_PROPERTY_NAMELEN</primary></indexterm><programlisting>#define GPC_PROPERTY_NAMELEN 512  /* Enough space for a property name I think */
</programlisting>
<para>

</para></refsect2>
<refsect2 id="GPCType" role="enum">
<title>enum GPCType</title>
<indexterm zone="GPCType"><primary>GPCType</primary></indexterm><programlisting>typedef enum {
	GPC_NORMAL,
	GPC_ATK_PROPERTY,
	GPC_ATK_RELATION,
	GPC_ATK_ACTION,
	GPC_ACCEL_PROPERTY
} GPCType;
</programlisting>
<para>
</para>
<para>

</para><variablelist role="enum">
<varlistentry id="GPC-NORMAL:CAPS" role="constant">
<term><literal>GPC_NORMAL</literal></term>
<listitem><simpara> is not an atk property
</simpara></listitem>
</varlistentry>
<varlistentry id="GPC-ATK-PROPERTY:CAPS" role="constant">
<term><literal>GPC_ATK_PROPERTY</literal></term>
<listitem><simpara> is a property of an <link linkend="AtkImplementor"><type>AtkImplementor</type></link> object
</simpara></listitem>
</varlistentry>
<varlistentry id="GPC-ATK-RELATION:CAPS" role="constant">
<term><literal>GPC_ATK_RELATION</literal></term>
<listitem><simpara> is an atk relation set property
</simpara></listitem>
</varlistentry>
<varlistentry id="GPC-ATK-ACTION:CAPS" role="constant">
<term><literal>GPC_ATK_ACTION</literal></term>
<listitem><simpara> is an atk action property
</simpara></listitem>
</varlistentry>
<varlistentry id="GPC-ACCEL-PROPERTY:CAPS" role="constant">
<term><literal>GPC_ACCEL_PROPERTY</literal></term>
<listitem><simpara> is an accelerator key property
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-new" role="function">
<title>glade_property_class_new ()</title>
<indexterm zone="glade-property-class-new"><primary>glade_property_class_new</primary></indexterm><programlisting><link linkend="GladePropertyClass">GladePropertyClass</link>* glade_property_class_new            (<link linkend="gpointer">gpointer</link> handle);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A generic pointer (i.e. a <link linkend="GladeWidgetClass"><type>GladeWidgetClass</type></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-new-from-spec" role="function">
<title>glade_property_class_new_from_spec ()</title>
<indexterm zone="glade-property-class-new-from-spec"><primary>glade_property_class_new_from_spec</primary></indexterm><programlisting><link linkend="GladePropertyClass">GladePropertyClass</link>* glade_property_class_new_from_spec  (<link linkend="gpointer">gpointer</link> handle,
                                                         <link linkend="GParamSpec">GParamSpec</link> *spec);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A generic pointer (i.e. a <link linkend="GladeWidgetClass"><type>GladeWidgetClass</type></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>spec</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GParamSpec"><type>GParamSpec</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly created <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link> based on <parameter>spec</parameter>
         or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if its unsupported.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-list-atk-relations" role="function">
<title>glade_property_class_list_atk_relations ()</title>
<indexterm zone="glade-property-class-list-atk-relations"><primary>glade_property_class_list_atk_relations</primary></indexterm><programlisting><link linkend="GList">GList</link>*              glade_property_class_list_atk_relations
                                                        (<link linkend="gpointer">gpointer</link> handle,
                                                         <link linkend="GType">GType</link> owner_type);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A generic pointer (i.e. a <link linkend="GladeWidgetClass"><type>GladeWidgetClass</type></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>owner_type</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GType"><type>GType</type></link> of the owning widget class.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="GList"><type>GList</type></link> of newly created atk relation <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-accel-property" role="function">
<title>glade_property_class_accel_property ()</title>
<indexterm zone="glade-property-class-accel-property"><primary>glade_property_class_accel_property</primary></indexterm><programlisting><link linkend="GladePropertyClass">GladePropertyClass</link>* glade_property_class_accel_property (<link linkend="gpointer">gpointer</link> handle,
                                                         <link linkend="GType">GType</link> owner_type);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A generic pointer (i.e. a <link linkend="GladeWidgetClass"><type>GladeWidgetClass</type></link>)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>owner_type</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GType"><type>GType</type></link> of the owning widget class.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly created <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link> for accelerators
         of the prescribed <parameter>owner_type</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-clone" role="function">
<title>glade_property_class_clone ()</title>
<indexterm zone="glade-property-class-clone"><primary>glade_property_class_clone</primary></indexterm><programlisting><link linkend="GladePropertyClass">GladePropertyClass</link>* glade_property_class_clone          (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_class</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link> cloned from <parameter>property_class</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-free" role="function">
<title>glade_property_class_free ()</title>
<indexterm zone="glade-property-class-free"><primary>glade_property_class_free</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_class_free           (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class);</programlisting>
<para>
Frees <parameter>klass</parameter> and its associated memory.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_class</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-is-visible" role="function">
<title>glade_property_class_is_visible ()</title>
<indexterm zone="glade-property-class-is-visible"><primary>glade_property_class_is_visible</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_class_is_visible     (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_class</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether or not to show this property in the editor
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-is-object" role="function">
<title>glade_property_class_is_object ()</title>
<indexterm zone="glade-property-class-is-object"><primary>glade_property_class_is_object</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_class_is_object      (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_class</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether or not this is an object property 
that refers to another object in this project.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-make-gvalue-from-string" role="function">
<title>glade_property_class_make_gvalue_from_string ()</title>
<indexterm zone="glade-property-class-make-gvalue-from-string"><primary>glade_property_class_make_gvalue_from_string</primary></indexterm><programlisting><link linkend="GValue">GValue</link>*             glade_property_class_make_gvalue_from_string
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class,
                                                         const <link linkend="gchar">gchar</link> *string,
                                                         <link linkend="GladeProject">GladeProject</link> *project);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_class</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara> a string representation of this property
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>project</parameter>&nbsp;:</term>
<listitem><simpara> the glade project that the associated property
          belongs to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A <link linkend="GValue"><type>GValue</type></link> created based on the <parameter>property_class</parameter>
         and <parameter>string</parameter> criteria.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-make-string-from-gvalue" role="function">
<title>glade_property_class_make_string_from_gvalue ()</title>
<indexterm zone="glade-property-class-make-string-from-gvalue"><primary>glade_property_class_make_string_from_gvalue</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              glade_property_class_make_string_from_gvalue
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class,
                                                         const <link linkend="GValue">GValue</link> *value);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_class</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GValue"><type>GValue</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly allocated string representation of <parameter>value</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-make-gvalue-from-vl" role="function">
<title>glade_property_class_make_gvalue_from_vl ()</title>
<indexterm zone="glade-property-class-make-gvalue-from-vl"><primary>glade_property_class_make_gvalue_from_vl</primary></indexterm><programlisting><link linkend="GValue">GValue</link>*             glade_property_class_make_gvalue_from_vl
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class,
                                                         <link linkend="va-list">va_list</link> vl);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_class</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vl</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="va-list"><type>va_list</type></link> holding one argument of the correct type
     specified by <parameter>property_class</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A <link linkend="GValue"><type>GValue</type></link> created based on the <parameter>property_class</parameter>
         and a <parameter>vl</parameter> arg of the correct type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-set-vl-from-gvalue" role="function">
<title>glade_property_class_set_vl_from_gvalue ()</title>
<indexterm zone="glade-property-class-set-vl-from-gvalue"><primary>glade_property_class_set_vl_from_gvalue</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_class_set_vl_from_gvalue
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="GValue">GValue</link> *value,
                                                         <link linkend="va-list">va_list</link> vl);</programlisting>
<para>
Sets <parameter>vl</parameter> from <parameter>value</parameter> based on <parameter>klass</parameter> criteria.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GValue"><type>GValue</type></link> to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vl</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="va-list"><type>va_list</type></link> holding one argument of the correct type
     specified by <parameter>klass</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-make-gvalue" role="function">
<title>glade_property_class_make_gvalue ()</title>
<indexterm zone="glade-property-class-make-gvalue"><primary>glade_property_class_make_gvalue</primary></indexterm><programlisting><link linkend="GValue">GValue</link>*             glade_property_class_make_gvalue    (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         ...);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> an argument of the correct type specified by <parameter>property_class</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A <link linkend="GValue"><type>GValue</type></link> created based on the <parameter>property_class</parameter>
         and the provided argument.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-get-from-gvalue" role="function">
<title>glade_property_class_get_from_gvalue ()</title>
<indexterm zone="glade-property-class-get-from-gvalue"><primary>glade_property_class_get_from_gvalue</primary></indexterm><programlisting><link linkend="void">void</link>                glade_property_class_get_from_gvalue
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="GValue">GValue</link> *value,
                                                         ...);</programlisting>
<para>
Assignes the provided return location to <parameter>value</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GValue"><type>GValue</type></link> to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> a return location of the correct type
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-update-from-node" role="function">
<title>glade_property_class_update_from_node ()</title>
<indexterm zone="glade-property-class-update-from-node"><primary>glade_property_class_update_from_node</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_class_update_from_node
                                                        (<link linkend="GladeXmlNode">GladeXmlNode</link> *node,
                                                         <link linkend="GModule">GModule</link> *module,
                                                         <link linkend="GType">GType</link> object_type,
                                                         <link linkend="GladePropertyClass">GladePropertyClass</link> **property_class,
                                                         const <link linkend="gchar">gchar</link> *domain);</programlisting>
<para>
Updates the <parameter>property_class</parameter> with the contents of the node in the xml
file. Only the values found in the xml file are overridden.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> the property node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>module</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GModule"><type>GModule</type></link> to lookup symbols from the plugin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object_type</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GType"><type>GType</type></link> of the owning object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property_class</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the property class
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>domain</parameter>&nbsp;:</term>
<listitem><simpara> the domain to translate catalog strings from
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success. <parameter>property_class</parameter> is set to NULL if the property
         has Disabled="TRUE".
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-get-displayable-value" role="function">
<title>glade_property_class_get_displayable_value ()</title>
<indexterm zone="glade-property-class-get-displayable-value"><primary>glade_property_class_get_displayable_value</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        glade_property_class_get_displayable_value
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="gint">gint</link> value);</programlisting>
<para>
Search a displayable values for <parameter>value</parameter> in this property class.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> the property class to search in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> the value to search
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a (gchar *) if a diplayable value was found, otherwise NULL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-make-adjustment" role="function">
<title>glade_property_class_make_adjustment ()</title>
<indexterm zone="glade-property-class-make-adjustment"><primary>glade_property_class_make_adjustment</primary></indexterm><programlisting><link linkend="GtkAdjustment">GtkAdjustment</link>*      glade_property_class_make_adjustment
                                                        (<link linkend="GladePropertyClass">GladePropertyClass</link> *property_class);</programlisting>
<para>
Creates and appropriate GtkAdjustment for use in the editor</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_class</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the property class
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> An appropriate <link linkend="GtkAdjustment"><type>GtkAdjustment</type></link> for use in the Property editor
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-match" role="function">
<title>glade_property_class_match ()</title>
<indexterm zone="glade-property-class-match"><primary>glade_property_class_match</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_class_match          (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="GladePropertyClass">GladePropertyClass</link> *comp);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether <parameter>klass</parameter> and <parameter>comp</parameter> are a match or not
         (properties in seperate decendant heirarchies that
          have the same name are not matches).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-void-value" role="function">
<title>glade_property_class_void_value ()</title>
<indexterm zone="glade-property-class-void-value"><primary>glade_property_class_void_value</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            glade_property_class_void_value     (<link linkend="GladePropertyClass">GladePropertyClass</link> *klass,
                                                         <link linkend="GValue">GValue</link> *value);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GladePropertyClass"><type>GladePropertyClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Whether <parameter>value</parameter> for this <parameter>klass</parameter> is voided; a voided value
         can be a <link linkend="NULL:CAPS"><literal>NULL</literal></link> value for boxed or object type param specs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="glade-property-class-atk-realname" role="function">
<title>glade_property_class_atk_realname ()</title>
<indexterm zone="glade-property-class-atk-realname"><primary>glade_property_class_atk_realname</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link>*        glade_property_class_atk_realname   (const <link linkend="gchar">gchar</link> *atk_name);</programlisting>
<para>
Translates a GladePropertyClass->id to the name that should be
saved into the glade file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>atk_name</parameter>&nbsp;:</term>
<listitem><simpara> The id of the atk property
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a pointer to a constant string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
